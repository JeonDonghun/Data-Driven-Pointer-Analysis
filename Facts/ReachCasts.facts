  <dacapo.Benchmark: boolean validate(java.lang.String)>, java.lang.String, dacapo.Benchmark.validate/r4, dacapo.Benchmark.validate/$r19
  <dacapo.Benchmark: void sortArray(java.lang.Comparable[])>, java.lang.Comparable, dacapo.Benchmark.sortArray/$r7, dacapo.Benchmark.sortArray/$r6
  <dacapo.TeePrintStream: void closeLog()>, dacapo.TeeOutputStream, dacapo.TeePrintStream.closeLog/$r2, dacapo.TeePrintStream.closeLog/$r1
  <dacapo.TeePrintStream: void openLog()>, dacapo.TeeOutputStream, dacapo.TeePrintStream.openLog/$r2, dacapo.TeePrintStream.openLog/$r1
  <dacapo.TeePrintStream: void version()>, dacapo.TeeOutputStream, dacapo.TeePrintStream.version/$r2, dacapo.TeePrintStream.version/$r1
  <java.beans.ChangeListenerMap: java.util.EventListener[] get(java.lang.String)>, java.util.EventListener[], java.beans.ChangeListenerMap.get/$r5, java.beans.ChangeListenerMap.get/$r4
  <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>, java.beans.PropertyChangeListener[], <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>/$r11, <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>/$r10
  <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>, java.beans.PropertyChangeListener[], <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>/r5, <java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>/$r8
  <java.io.BufferedWriter: void <init>(java.io.Writer,int)>, java.lang.String, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/$r6, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/$r5
  <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>, java.io.DataInputStream, <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/r1, <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/r0
  <java.io.DeleteOnExitHook: void run()>, java.lang.String, java.io.DeleteOnExitHook.run/r5, java.io.DeleteOnExitHook.run/$r10
  <java.io.ExpiringCache: java.io.ExpiringCache$Entry entryFor(java.lang.String)>, java.io.ExpiringCache$Entry, java.io.ExpiringCache.entryFor/r2, java.io.ExpiringCache.entryFor/$r4
  <java.io.ExpiringCache: void cleanup()>, java.lang.String, java.io.ExpiringCache.cleanup/r4, java.io.ExpiringCache.cleanup/$r6
  <java.io.File: boolean equals(java.lang.Object)>, java.io.File, java.io.File.equals/$r2, java.io.File.equals/r1
  <java.io.FileInputStream: boolean isRunningFinalize()>, java.lang.Boolean, java.io.FileInputStream.isRunningFinalize/$r3, java.io.FileInputStream.isRunningFinalize/$r2
  <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>, java.lang.String[], <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$r10, <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$r9
  <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>, java.lang.String[], <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$r9, <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$r8
  <java.io.FileOutputStream: boolean isRunningFinalize()>, java.lang.Boolean, java.io.FileOutputStream.isRunningFinalize/$r3, java.io.FileOutputStream.isRunningFinalize/$r2
  <java.io.FilePermission: boolean equals(java.lang.Object)>, java.io.FilePermission, java.io.FilePermission.equals/r2, java.io.FilePermission.equals/r1
  <java.io.FilePermission: boolean implies(java.security.Permission)>, java.io.FilePermission, java.io.FilePermission.implies/r2, java.io.FilePermission.implies/r1
  <java.io.FilePermissionCollection: boolean implies(java.security.Permission)>, java.io.FilePermission, java.io.FilePermissionCollection.implies/r2, java.io.FilePermissionCollection.implies/r1
  <java.io.FilePermissionCollection: boolean implies(java.security.Permission)>, java.io.FilePermission, java.io.FilePermissionCollection.implies/r4, java.io.FilePermissionCollection.implies/$r9
  <java.io.FilePermission: void init(int)>, java.lang.String, java.io.FilePermission.init/$r8, java.io.FilePermission.init/$r7
  <java.io.ObjectStreamClass: void <clinit>()>, sun.reflect.ReflectionFactory, java.io.ObjectStreamClass.<clinit>/$r4, java.io.ObjectStreamClass.<clinit>/$r3
  <java.io.UnixFileSystem: void <init>()>, java.lang.String, java.io.UnixFileSystem.<init>/$r11, java.io.UnixFileSystem.<init>/$r10
  <java.io.UnixFileSystem: void <init>()>, java.lang.String, java.io.UnixFileSystem.<init>/$r5, java.io.UnixFileSystem.<init>/$r4
  <java.io.UnixFileSystem: void <init>()>, java.lang.String, java.io.UnixFileSystem.<init>/$r8, java.io.UnixFileSystem.<init>/$r7
  <java.lang.ApplicationShutdownHooks: void run()>, java.lang.Thread, java.lang.ApplicationShutdownHooks.run/r10, java.lang.ApplicationShutdownHooks.run/$r9
  <java.lang.ApplicationShutdownHooks: void run()>, java.lang.Thread, java.lang.ApplicationShutdownHooks.run/r13, java.lang.ApplicationShutdownHooks.run/$r12
  <java.lang.AssertionError: void <init>(java.lang.Object)>, java.lang.Throwable, <java.lang.AssertionError: void <init>(java.lang.Object)>/$r6, <java.lang.AssertionError: void <init>(java.lang.Object)>/r1
  <java.lang.Byte: boolean equals(java.lang.Object)>, java.lang.Byte, java.lang.Byte.equals/$r2, java.lang.Byte.equals/r1
  <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock forName(java.lang.String)>, java.lang.Character$UnicodeBlock, java.lang.Character$UnicodeBlock.forName/r3, java.lang.Character$UnicodeBlock.forName/$r5
  <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>, java.lang.Class, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r5, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r4
  <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>, java.lang.String, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r11, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r10
  <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>, java.lang.String, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r9, <java.lang.Class$EnclosingMethodInfo: void <init>(java.lang.Object[])>/$r8
  <java.lang.Class: java.lang.reflect.Constructor[] privateGetDeclaredConstructors(boolean)>, java.lang.reflect.Constructor[], java.lang.Class.privateGetDeclaredConstructors/r1, java.lang.Class.privateGetDeclaredConstructors/$r5
  <java.lang.Class: java.lang.reflect.Constructor[] privateGetDeclaredConstructors(boolean)>, java.lang.reflect.Constructor[], java.lang.Class.privateGetDeclaredConstructors/r1, java.lang.Class.privateGetDeclaredConstructors/$r9
  <java.lang.Class: java.lang.reflect.Constructor[] privateGetDeclaredConstructors(boolean)>, java.lang.reflect.Constructor[], java.lang.Class.privateGetDeclaredConstructors/$r5, java.lang.Class.privateGetDeclaredConstructors/$r4
  <java.lang.Class: java.lang.reflect.Constructor[] privateGetDeclaredConstructors(boolean)>, java.lang.reflect.Constructor[], java.lang.Class.privateGetDeclaredConstructors/$r9, java.lang.Class.privateGetDeclaredConstructors/$r8
  <java.lang.Class: java.lang.reflect.Field[] privateGetDeclaredFields(boolean)>, java.lang.reflect.Field[], java.lang.Class.privateGetDeclaredFields/r1, java.lang.Class.privateGetDeclaredFields/$r5
  <java.lang.Class: java.lang.reflect.Field[] privateGetDeclaredFields(boolean)>, java.lang.reflect.Field[], java.lang.Class.privateGetDeclaredFields/r1, java.lang.Class.privateGetDeclaredFields/$r9
  <java.lang.Class: java.lang.reflect.Field[] privateGetDeclaredFields(boolean)>, java.lang.reflect.Field[], java.lang.Class.privateGetDeclaredFields/$r5, java.lang.Class.privateGetDeclaredFields/$r4
  <java.lang.Class: java.lang.reflect.Field[] privateGetDeclaredFields(boolean)>, java.lang.reflect.Field[], java.lang.Class.privateGetDeclaredFields/$r9, java.lang.Class.privateGetDeclaredFields/$r8
  <java.lang.Class: java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)>, java.lang.reflect.Method[], java.lang.Class.privateGetDeclaredMethods/r1, java.lang.Class.privateGetDeclaredMethods/$r5
  <java.lang.Class: java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)>, java.lang.reflect.Method[], java.lang.Class.privateGetDeclaredMethods/r1, java.lang.Class.privateGetDeclaredMethods/$r9
  <java.lang.Class: java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)>, java.lang.reflect.Method[], java.lang.Class.privateGetDeclaredMethods/$r5, java.lang.Class.privateGetDeclaredMethods/$r4
  <java.lang.Class: java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)>, java.lang.reflect.Method[], java.lang.Class.privateGetDeclaredMethods/$r9, java.lang.Class.privateGetDeclaredMethods/$r8
  <java.lang.ClassLoader$2: java.lang.Object nextElement()>, sun.misc.Resource, java.lang.ClassLoader$2.nextElement/$r3, java.lang.ClassLoader$2.nextElement/$r2
  <java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>, java.lang.Boolean, java.lang.ClassLoader.loadLibrary0/r3, java.lang.ClassLoader.loadLibrary0/$r13
  <java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>, java.lang.ClassLoader$NativeLibrary, java.lang.ClassLoader.loadLibrary0/r8, java.lang.ClassLoader.loadLibrary0/$r19
  <java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>, java.lang.ClassLoader$NativeLibrary, java.lang.ClassLoader.loadLibrary0/r9, java.lang.ClassLoader.loadLibrary0/$r32
  <java.lang.ClassLoader: java.lang.Class defineTransformedClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain,java.lang.ClassFormatError,java.lang.String)>, sun.misc.ClassFileTransformer, java.lang.ClassLoader.defineTransformedClass/$r10, java.lang.ClassLoader.defineTransformedClass/$r9
  <java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>, java.lang.Package, java.lang.ClassLoader.getPackage/r3, java.lang.ClassLoader.getPackage/$r7
  <java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>, java.lang.ClassLoader$NativeLibrary, java.lang.ClassLoader.findNative/r4, java.lang.ClassLoader.findNative/$r8
  <java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>, java.security.cert.Certificate[], java.lang.ClassLoader.checkCerts/r4, java.lang.ClassLoader.checkCerts/$r9
  <java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>, java.security.cert.Certificate[], java.lang.ClassLoader.checkCerts/$r9, java.lang.ClassLoader.checkCerts/$r8
  <java.lang.ClassLoader: void initSystemClassLoader()>, java.lang.ClassLoader, java.lang.ClassLoader.initSystemClassLoader/$r9, java.lang.ClassLoader.initSystemClassLoader/$r8
  <java.lang.ClassLoader: void initSystemClassLoader()>, java.lang.Error, java.lang.ClassLoader.initSystemClassLoader/$r12, java.lang.ClassLoader.initSystemClassLoader/r1
  <java.lang.Class: sun.reflect.ReflectionFactory getReflectionFactory()>, sun.reflect.ReflectionFactory, java.lang.Class.getReflectionFactory/$r3, java.lang.Class.getReflectionFactory/$r2
  <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>, java.lang.ConditionalSpecialCasing$Entry, java.lang.ConditionalSpecialCasing.lookUpTable/r7, java.lang.ConditionalSpecialCasing.lookUpTable/$r10
  <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>, java.util.HashSet, java.lang.ConditionalSpecialCasing.lookUpTable/r4, java.lang.ConditionalSpecialCasing.lookUpTable/$r9
  <java.lang.ConditionalSpecialCasing: void <clinit>()>, java.util.HashSet, java.lang.ConditionalSpecialCasing.<clinit>/r3, java.lang.ConditionalSpecialCasing.<clinit>/$r51
  <java.lang.Integer: boolean equals(java.lang.Object)>, java.lang.Integer, java.lang.Integer.equals/$r2, java.lang.Integer.equals/r1
  <java.lang.Package$1: java.lang.Object run()>, java.net.URL, java.lang.Package$1.run/r2, java.lang.Package$1.run/$r7
  <java.lang.Package$1: java.lang.Object run()>, java.util.jar.Manifest, java.lang.Package$1.run/r24, java.lang.Package$1.run/$r23
  <java.lang.Package: java.lang.Package defineSystemPackage(java.lang.String,java.lang.String)>, java.lang.Package, java.lang.Package.defineSystemPackage/$r4, java.lang.Package.defineSystemPackage/$r3
  <java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>, java.lang.Package, java.lang.Package.getSystemPackage/r3, java.lang.Package.getSystemPackage/$r7
  <java.lang.ref.Finalizer$FinalizerThread: void run()>, java.lang.ref.Finalizer, java.lang.ref.Finalizer$FinalizerThread.run/r1, java.lang.ref.Finalizer$FinalizerThread.run/$r3
  <java.lang.reflect.AccessibleObject: void <clinit>()>, sun.reflect.ReflectionFactory, java.lang.reflect.AccessibleObject.<clinit>/$r3, java.lang.reflect.AccessibleObject.<clinit>/$r2
  <java.lang.reflect.AccessibleObject: void setAccessible0(java.lang.reflect.AccessibleObject,boolean)>, java.lang.reflect.Constructor, java.lang.reflect.AccessibleObject.setAccessible0/r1, java.lang.reflect.AccessibleObject.setAccessible0/r0
  <java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>, java.lang.Class[], java.lang.reflect.Constructor.getExceptionTypes/$r3, java.lang.reflect.Constructor.getExceptionTypes/$r2
  <java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>, java.lang.Class[], java.lang.reflect.Constructor.getExceptionTypes/$r4, java.lang.reflect.Constructor.getExceptionTypes/$r3
  <java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>, java.lang.Class[], java.lang.reflect.Constructor.getParameterTypes/$r3, java.lang.reflect.Constructor.getParameterTypes/$r2
  <java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>, java.lang.Class[], java.lang.reflect.Constructor.getParameterTypes/$r4, java.lang.reflect.Constructor.getParameterTypes/$r3
  <java.lang.reflect.Modifier: void <clinit>()>, sun.reflect.ReflectionFactory, java.lang.reflect.Modifier.<clinit>/r1, java.lang.reflect.Modifier.<clinit>/$r2
  <java.lang.ref.Reference$ReferenceHandler: void run()>, sun.misc.Cleaner, java.lang.ref.Reference$ReferenceHandler.run/$r13, java.lang.ref.Reference$ReferenceHandler.run/r3
  <java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>, java.lang.String, java.lang.SecurityManager.checkPackageAccess/r3, java.lang.SecurityManager.checkPackageAccess/$r10
  <java.lang.Shutdown: void runHooks()>, java.lang.Runnable, java.lang.Shutdown.runHooks/r2, java.lang.Shutdown.runHooks/$r5
  <java.lang.Shutdown: void runHooks()>, java.lang.ThreadDeath, java.lang.Shutdown.runHooks/r4, java.lang.Shutdown.runHooks/r3
  <java.lang.String: boolean equals(java.lang.Object)>, java.lang.String, java.lang.String.equals/r2, java.lang.String.equals/r1
  <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>, java.lang.StringBuffer, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>/$r4, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>/r1
  <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>, java.lang.String, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>/r1
  <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>, java.lang.StringBuffer, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/$r4, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/r1
  <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>, java.lang.StringBuilder, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/$r6, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/r1
  <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>, java.lang.String, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/$r2, <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>/r1
  <java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>, java.lang.StringCoding$StringEncoder, <java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/r3, <java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/$r6
  <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>, java.lang.StringCoding$StringDecoder, <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/r3, <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/$r6
  <java.lang.StringCoding: java.lang.Object deref(java.lang.ThreadLocal)>, java.lang.ref.SoftReference, java.lang.StringCoding.deref/r1, java.lang.StringCoding.deref/$r2
  <java.lang.StringCoding$StringDecoder: java.lang.String charsetName()>, sun.nio.cs.HistoricallyNamedCharset, java.lang.StringCoding$StringDecoder.charsetName/$r3, java.lang.StringCoding$StringDecoder.charsetName/$r2
  <java.lang.StringCoding$StringEncoder: java.lang.String charsetName()>, sun.nio.cs.HistoricallyNamedCharset, java.lang.StringCoding$StringEncoder.charsetName/$r3, java.lang.StringCoding$StringEncoder.charsetName/$r2
  <java.lang.String: int compareTo(java.lang.Object)>, java.lang.String, <java.lang.String: int compareTo(java.lang.Object)>/$r2, <java.lang.String: int compareTo(java.lang.Object)>/r1
  <java.lang.SystemClassLoaderAction: java.lang.Object run()>, java.lang.ClassLoader, java.lang.SystemClassLoaderAction.run/r6, java.lang.SystemClassLoaderAction.run/$r12
  <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>, java.lang.String, java.lang.System.setProperty/$r6, java.lang.System.setProperty/$r5
  <java.lang.Thread: boolean auditSubclass(java.lang.Class)>, java.lang.Boolean, java.lang.Thread.auditSubclass/r2, java.lang.Thread.auditSubclass/$r3
  <java.lang.Thread: boolean isCCLOverridden(java.lang.Class)>, java.lang.Boolean, java.lang.Thread.isCCLOverridden/r6, java.lang.Thread.isCCLOverridden/$r5
  <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>, java.lang.ThreadGroup[], <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/$r11, <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/$r10
  <java.lang.ThreadGroup: void add(java.lang.Thread)>, java.lang.Thread[], <java.lang.ThreadGroup: void add(java.lang.Thread)>/$r11, <java.lang.ThreadGroup: void add(java.lang.Thread)>/$r10
  <java.lang.ThreadLocal$ThreadLocalMap: int expungeStaleEntry(int)>, java.lang.ThreadLocal, java.lang.ThreadLocal$ThreadLocalMap.expungeStaleEntry/r3, java.lang.ThreadLocal$ThreadLocalMap.expungeStaleEntry/$r7
  <java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry getEntryAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>, java.lang.ThreadLocal, java.lang.ThreadLocal$ThreadLocalMap.getEntryAfterMiss/r4, java.lang.ThreadLocal$ThreadLocalMap.getEntryAfterMiss/$r5
  <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>, java.lang.ThreadLocal, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/r4, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/$r8
  <java.lang.ThreadLocal$ThreadLocalMap: void replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int)>, java.lang.ThreadLocal, java.lang.ThreadLocal$ThreadLocalMap.replaceStaleEntry/r5, java.lang.ThreadLocal$ThreadLocalMap.replaceStaleEntry/$r10
  <java.lang.ThreadLocal$ThreadLocalMap: void resize()>, java.lang.ThreadLocal, java.lang.ThreadLocal$ThreadLocalMap.resize/r4, java.lang.ThreadLocal$ThreadLocalMap.resize/$r5
  <java.lang.ThreadLocal$ThreadLocalMap: void set(java.lang.ThreadLocal,java.lang.Object)>, java.lang.ThreadLocal, java.lang.ThreadLocal$ThreadLocalMap.set/r5, java.lang.ThreadLocal$ThreadLocalMap.set/$r6
  <java.math.BigInteger: boolean equals(java.lang.Object)>, java.math.BigInteger, java.math.BigInteger.equals/r2, java.math.BigInteger.equals/r1
  <java.math.RoundingMode: java.math.RoundingMode[] values()>, java.math.RoundingMode[], java.math.RoundingMode.values/$r2, java.math.RoundingMode.values/$r1
  <java.net.Inet4Address: boolean equals(java.lang.Object)>, java.net.InetAddress, java.net.Inet4Address.equals/$r2, java.net.Inet4Address.equals/r1
  <java.net.Inet6Address: boolean equals(java.lang.Object)>, java.net.Inet6Address, java.net.Inet6Address.equals/r2, java.net.Inet6Address.equals/r1
  <java.net.Inet6Address: byte[] getAddress()>, byte[], java.net.Inet6Address.getAddress/$r4, java.net.Inet6Address.getAddress/$r3
  <java.net.Inet6Address$Inet6AddressHolder: boolean equals(java.lang.Object)>, java.net.Inet6Address$Inet6AddressHolder, java.net.Inet6Address$Inet6AddressHolder.equals/r2, java.net.Inet6Address$Inet6AddressHolder.equals/r1
  <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>, java.net.Inet6Address, <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>/r4, <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>/r3
  <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>, java.net.InetAddress, <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>/r3, <java.net.Inet6Address: int deriveNumericScope(byte[],java.net.NetworkInterface)>/$r5
  <java.net.InetAddress$2: sun.net.spi.nameservice.NameService run()>, sun.net.spi.nameservice.NameServiceDescriptor, <java.net.InetAddress$2: sun.net.spi.nameservice.NameService run()>/r2, <java.net.InetAddress$2: sun.net.spi.nameservice.NameService run()>/$r5
  <java.net.InetAddress$Cache: java.net.InetAddress$CacheEntry get(java.lang.String)>, java.net.InetAddress$CacheEntry, java.net.InetAddress$Cache.get/r2, java.net.InetAddress$Cache.get/$r4
  <java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.lang.Object)>, java.lang.String, java.net.InetAddress$Cache.put/r5, java.net.InetAddress$Cache.put/$r10
  <java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.lang.Object)>, java.net.InetAddress$CacheEntry, java.net.InetAddress$Cache.put/r6, java.net.InetAddress$Cache.put/$r12
  <java.net.InetAddressImplFactory: java.net.InetAddressImpl create()>, java.net.InetAddressImpl, java.net.InetAddressImplFactory.create/$r1, java.net.InetAddressImplFactory.create/r0
  <java.net.InetAddress: java.lang.Object getAddressFromNameService(java.lang.String,java.net.InetAddress)>, java.net.InetAddress[], java.net.InetAddress.getAddressFromNameService/$r15, java.net.InetAddress.getAddressFromNameService/r9
  <java.net.InetAddress: java.lang.Object getAddressFromNameService(java.lang.String,java.net.InetAddress)>, java.net.InetAddress[], java.net.InetAddress.getAddressFromNameService/r16, java.net.InetAddress.getAddressFromNameService/$r15
  <java.net.InetAddress: java.lang.Object getAddressFromNameService(java.lang.String,java.net.InetAddress)>, sun.net.spi.nameservice.NameService, java.net.InetAddress.getAddressFromNameService/r4, java.net.InetAddress.getAddressFromNameService/$r11
  <java.net.InetAddress: java.lang.Object loadImpl(java.lang.String)>, java.lang.String, java.net.InetAddress.loadImpl/r2, java.net.InetAddress.loadImpl/$r5
  <java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>, sun.net.spi.nameservice.NameService, java.net.InetAddress.getHostFromNameService/r3, java.net.InetAddress.getHostFromNameService/$r6
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>, java.net.InetAddress[], <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r10, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r9
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>, java.net.InetAddress[], <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r6, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/r3
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>, java.net.InetAddress[], <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r7, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r6
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>, java.net.InetAddress[], <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/$r9, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,java.net.InetAddress,boolean)>/r8
  <java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>, sun.net.spi.nameservice.NameService, java.net.InetAddress.createNSProvider/r1, java.net.InetAddress.createNSProvider/$r6
  <java.net.InetAddress: void <clinit>()>, java.lang.Boolean, java.net.InetAddress.<clinit>/$r5, java.net.InetAddress.<clinit>/$r4
  <java.net.InetAddress: void <clinit>()>, java.lang.String, java.net.InetAddress.<clinit>/r22, java.net.InetAddress.<clinit>/$r21
  <java.net.InetAddress: void <clinit>()>, java.lang.String, java.net.InetAddress.<clinit>/r22, java.net.InetAddress.<clinit>/$r29
  <java.net.SocketPermission: boolean equals(java.lang.Object)>, java.net.SocketPermission, java.net.SocketPermission.equals/r2, java.net.SocketPermission.equals/r1
  <java.net.SocketPermission: boolean implies(java.security.Permission)>, java.net.SocketPermission, java.net.SocketPermission.implies/r2, java.net.SocketPermission.implies/r1
  <java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>, java.net.SocketPermission, java.net.SocketPermissionCollection.implies/r2, java.net.SocketPermissionCollection.implies/r1
  <java.net.SocketPermissionCollection: boolean implies(java.security.Permission)>, java.net.SocketPermission, java.net.SocketPermissionCollection.implies/r4, java.net.SocketPermissionCollection.implies/$r9
  <java.net.SocketPermission: void <clinit>()>, java.lang.Boolean, java.net.SocketPermission.<clinit>/r0, java.net.SocketPermission.<clinit>/$r2
  <java.net.SocketPermission: void <clinit>()>, java.lang.Boolean, java.net.SocketPermission.<clinit>/r5, java.net.SocketPermission.<clinit>/$r4
  <java.net.URL: boolean equals(java.lang.Object)>, java.net.URL, java.net.URL.equals/r2, java.net.URL.equals/r1
  <java.net.URLClassLoader$3: boolean next()>, java.net.URL, java.net.URLClassLoader$3.next/r1, java.net.URLClassLoader$3.next/$r6
  <java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>, java.lang.Class, java.net.URLClassLoader.findClass/$r6, java.net.URLClassLoader.findClass/$r5
  <java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>, java.lang.ClassNotFoundException, java.net.URLClassLoader.findClass/$r9, java.net.URLClassLoader.findClass/$r8
  <java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>, java.net.URL, java.net.URLClassLoader.findResource/r3, java.net.URLClassLoader.findResource/$r5
  <java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>, java.net.JarURLConnection, java.net.URLClassLoader.getPermissions/$r26, java.net.URLClassLoader.getPermissions/r4
  <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>, java.lang.String, java.net.URL.getURLStreamHandler/r15, java.net.URL.getURLStreamHandler/$r14
  <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>, java.net.URLStreamHandler, java.net.URL.getURLStreamHandler/r2, java.net.URL.getURLStreamHandler/$r10
  <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>, java.net.URLStreamHandler, java.net.URL.getURLStreamHandler/r2, java.net.URL.getURLStreamHandler/$r31
  <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>, java.net.URLStreamHandler, java.net.URL.getURLStreamHandler/r38, java.net.URL.getURLStreamHandler/$r37
  <java.net.URL: void <clinit>()>, java.lang.Boolean, java.net.URL.<clinit>/$r4, java.net.URL.<clinit>/$r3
  <java.nio.charset.Charset$2: java.nio.charset.Charset run()>, java.nio.charset.spi.CharsetProvider, <java.nio.charset.Charset$2: java.nio.charset.Charset run()>/r2, <java.nio.charset.Charset$2: java.nio.charset.Charset run()>/$r4
  <java.nio.charset.Charset$3: java.lang.Object run()>, java.nio.charset.spi.CharsetProvider, java.nio.charset.Charset$3.run/$r3, java.nio.charset.Charset$3.run/$r2
  <java.nio.charset.Charset: boolean atBugLevel(java.lang.String)>, java.lang.String, java.nio.charset.Charset.atBugLevel/$r4, java.nio.charset.Charset.atBugLevel/$r3
  <java.nio.charset.Charset: boolean equals(java.lang.Object)>, java.nio.charset.Charset, java.nio.charset.Charset.equals/$r3, java.nio.charset.Charset.equals/r1
  <java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])>, java.nio.charset.CharsetDecoder, java.nio.charset.CharsetEncoder.isLegalReplacement/$r7, java.nio.charset.CharsetEncoder.isLegalReplacement/$r6
  <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>, java.lang.String, java.nio.charset.Charset.defaultCharset/r2, java.nio.charset.Charset.defaultCharset/$r7
  <java.nio.charset.Charset: java.nio.charset.Charset lookup2(java.lang.String)>, java.nio.charset.Charset, java.nio.charset.Charset.lookup2/$r7, java.nio.charset.Charset.lookup2/$r6
  <java.nio.charset.Charset: java.nio.charset.Charset lookup(java.lang.String)>, java.nio.charset.Charset, java.nio.charset.Charset.lookup/$r6, java.nio.charset.Charset.lookup/$r5
  <java.nio.charset.Charset: java.nio.charset.Charset lookupViaProviders(java.lang.String)>, java.nio.charset.Charset, java.nio.charset.Charset.lookupViaProviders/r2, java.nio.charset.Charset.lookupViaProviders/$r8
  <java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>, java.lang.ref.WeakReference, java.nio.charset.CoderResult$Cache.get/$r10, java.nio.charset.CoderResult$Cache.get/$r9
  <java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>, java.nio.charset.CoderResult, java.nio.charset.CoderResult$Cache.get/r2, java.nio.charset.CoderResult$Cache.get/$r11
  <java.nio.HeapByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>, java.nio.HeapByteBuffer, <java.nio.HeapByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>/r2, <java.nio.HeapByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>/r1
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>, java.security.ProtectionDomain[], <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r13, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r12
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>, java.security.ProtectionDomain[], <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r5, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r4
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>, java.security.AlgorithmParametersSpi, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>/$r5, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>/$r4
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>, java.security.Provider, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>/$r7, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>/$r6
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>, java.security.AlgorithmParametersSpi, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>/$r6, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>/$r5
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>, java.security.Provider, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>/$r8, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>/$r7
  <java.security.BasicPermission: boolean equals(java.lang.Object)>, java.security.BasicPermission, java.security.BasicPermission.equals/r2, java.security.BasicPermission.equals/r1
  <java.security.BasicPermission: boolean implies(java.security.Permission)>, java.security.BasicPermission, java.security.BasicPermission.implies/r2, java.security.BasicPermission.implies/r1
  <java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>, java.security.BasicPermission, java.security.BasicPermissionCollection.implies/r2, java.security.BasicPermissionCollection.implies/r1
  <java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>, java.security.Permission, java.security.BasicPermissionCollection.implies/r22, java.security.BasicPermissionCollection.implies/$r21
  <java.security.BasicPermissionCollection: boolean implies(java.security.Permission)>, java.security.Permission, java.security.BasicPermissionCollection.implies/r5, java.security.BasicPermissionCollection.implies/$r13
  <java.security.BasicPermissionCollection: void add(java.security.Permission)>, java.security.BasicPermission, java.security.BasicPermissionCollection.add/r3, java.security.BasicPermissionCollection.add/r1
  <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>, java.security.cert.CertificateFactorySpi, <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>/$r4, <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>/$r3
  <java.security.CodeSigner: boolean equals(java.lang.Object)>, java.security.CodeSigner, java.security.CodeSigner.equals/r2, java.security.CodeSigner.equals/r1
  <java.security.CodeSource: boolean equals(java.lang.Object)>, java.security.CodeSource, java.security.CodeSource.equals/r2, java.security.CodeSource.equals/r1
  <java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>, java.security.cert.Certificate[], java.security.CodeSource.getCertificates/$r15, java.security.CodeSource.getCertificates/$r14
  <java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>, java.security.cert.Certificate[], java.security.CodeSource.getCertificates/$r18, java.security.CodeSource.getCertificates/$r17
  <java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>, java.security.cert.Certificate[], java.security.CodeSource.getCertificates/$r5, java.security.CodeSource.getCertificates/$r4
  <java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>, java.security.cert.Certificate[], <java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>/$r4, <java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>/$r3
  <java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>, java.security.CodeSigner[], <java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>/$r4, <java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>/$r3
  <java.security.IdentityScope: void initializeSystemScope()>, java.lang.String, java.security.IdentityScope.initializeSystemScope/r1, java.security.IdentityScope.initializeSystemScope/$r3
  <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>, java.security.KeyFactorySpi, <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>/$r5, <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>/$r4
  <java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>, java.security.KeyFactorySpi, java.security.KeyFactory.nextSpi/r5, java.security.KeyFactory.nextSpi/r4
  <java.security.KeyFactory: java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)>, java.security.Provider$Service, java.security.KeyFactory.nextSpi/r3, java.security.KeyFactory.nextSpi/$r13
  <java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>, java.lang.RuntimeException, java.security.KeyFactory.generatePublic/$r10, java.security.KeyFactory.generatePublic/r2
  <java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>, java.security.spec.InvalidKeySpecException, java.security.KeyFactory.generatePublic/$r11, java.security.KeyFactory.generatePublic/r2
  <java.security.KeyStore: java.lang.String getDefaultType()>, java.lang.String, java.security.KeyStore.getDefaultType/r1, java.security.KeyStore.getDefaultType/$r2
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>, java.security.KeyStoreSpi, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>/$r6, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>/$r5
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>, java.security.Provider, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>/$r8, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>/$r7
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>, java.security.KeyStoreSpi, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>/$r5, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>/$r4
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>, java.security.Provider, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>/$r7, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>/$r6
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>, java.security.MessageDigest, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/r2, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r5
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>, java.security.MessageDigestSpi, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r11, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r10
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>, java.security.Provider, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r14, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r13
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>, java.security.Provider, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r7, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r6
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>, java.security.MessageDigest, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/r3, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r6
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>, java.security.MessageDigestSpi, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r11, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r10
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>, java.security.Provider, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r14, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r13
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>, java.security.Provider, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r8, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/$r7
  <java.security.PermissionCollection: java.lang.String toString()>, java.security.Permission, java.security.PermissionCollection.toString/$r13, java.security.PermissionCollection.toString/$r12
  <java.security.PermissionsEnumerator: java.security.Permission nextElement()>, java.security.Permission, <java.security.PermissionsEnumerator: java.security.Permission nextElement()>/$r3, <java.security.PermissionsEnumerator: java.security.Permission nextElement()>/$r2
  <java.security.PermissionsEnumerator: java.util.Enumeration getNextEnumWithMore()>, java.security.PermissionCollection, java.security.PermissionsEnumerator.getNextEnumWithMore/r1, java.security.PermissionsEnumerator.getNextEnumWithMore/$r5
  <java.security.PermissionsHash: boolean implies(java.security.Permission)>, java.security.Permission, java.security.PermissionsHash.implies/r4, java.security.PermissionsHash.implies/$r9
  <java.security.PermissionsHash: boolean implies(java.security.Permission)>, java.security.Permission, java.security.PermissionsHash.implies/r6, java.security.PermissionsHash.implies/$r12
  <java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>, java.security.PermissionCollection, java.security.Permissions.getPermissionCollection/r3, java.security.Permissions.getPermissionCollection/$r5
  <java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>, java.security.cert.Certificate, java.security.Permissions.getUnresolvedPermissions/$r16, java.security.Permissions.getUnresolvedPermissions/$r15
  <java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>, java.security.UnresolvedPermissionCollection, java.security.Permissions.getUnresolvedPermissions/r2, java.security.Permissions.getUnresolvedPermissions/$r11
  <java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>, java.security.UnresolvedPermission, java.security.Permissions.getUnresolvedPermissions/r7, java.security.Permissions.getUnresolvedPermissions/$r19
  <java.security.Policy$2: java.security.Policy run()>, java.security.Policy, <java.security.Policy$2: java.security.Policy run()>/$r6, <java.security.Policy$2: java.security.Policy run()>/$r5
  <java.security.Policy: java.security.Policy getPolicyNoCheck()>, java.lang.String, java.security.Policy.getPolicyNoCheck/r6, java.security.Policy.getPolicyNoCheck/$r5
  <java.security.Policy: java.security.Policy getPolicyNoCheck()>, java.security.Policy, java.security.Policy.getPolicyNoCheck/r3, java.security.Policy.getPolicyNoCheck/$r13
  <java.security.Policy: java.security.Policy getPolicyNoCheck()>, java.security.Policy, java.security.Policy.getPolicyNoCheck/$r9, java.security.Policy.getPolicyNoCheck/$r8
  <java.security.ProtectionDomain$2$1: java.security.PermissionCollection get(java.security.ProtectionDomain)>, java.security.PermissionCollection, java.security.ProtectionDomain$2$1.get/$r4, java.security.ProtectionDomain$2$1.get/$r3
  <java.security.ProtectionDomain$2$1: java.security.PermissionCollection get(java.security.ProtectionDomain)>, java.security.PermissionCollection, java.security.ProtectionDomain$2$1.get/$r4, java.security.ProtectionDomain$2$1.get/$r7
  <java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>, java.security.PermissionCollection, java.security.ProtectionDomain.mergePermissions/r1, java.security.ProtectionDomain.mergePermissions/$r15
  <java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>, java.security.Permission, java.security.ProtectionDomain.mergePermissions/r11, java.security.ProtectionDomain.mergePermissions/$r37
  <java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>, java.security.Permission, java.security.ProtectionDomain.mergePermissions/r35, java.security.ProtectionDomain.mergePermissions/$r34
  <java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>, java.security.Permission, java.security.ProtectionDomain.mergePermissions/$r43, java.security.ProtectionDomain.mergePermissions/$r42
  <java.security.ProtectionDomain: java.security.PermissionCollection mergePermissions()>, java.security.Permission, java.security.ProtectionDomain.mergePermissions/$r46, java.security.ProtectionDomain.mergePermissions/$r45
  <java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>, java.security.Principal[], java.security.ProtectionDomain.getPrincipals/$r3, java.security.ProtectionDomain.getPrincipals/$r2
  <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>, java.security.Permissions, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/$r7, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/r2
  <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>, java.security.Principal[], <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/$r11, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/$r10
  <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>, java.security.Permissions, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/$r5, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/r2
  <java.security.Provider: java.lang.Object implPut(java.lang.Object,java.lang.Object)>, java.lang.String, java.security.Provider.implPut/r3, java.security.Provider.implPut/r1
  <java.security.Provider: java.lang.Object implPut(java.lang.Object,java.lang.Object)>, java.lang.String, java.security.Provider.implPut/$r7, java.security.Provider.implPut/r2
  <java.security.Provider: java.lang.String getEngineName(java.lang.String)>, java.security.Provider$EngineDescription, java.security.Provider.getEngineName/r2, java.security.Provider.getEngineName/$r4
  <java.security.Provider: java.lang.String getEngineName(java.lang.String)>, java.security.Provider$EngineDescription, java.security.Provider.getEngineName/r2, java.security.Provider.getEngineName/$r7
  <java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>, java.security.Provider$Service, java.security.Provider.getService/$r12, java.security.Provider.getService/$r11
  <java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>, java.security.Provider$Service, java.security.Provider.getService/r4, java.security.Provider.getService/$r8
  <java.security.Provider$Service: java.lang.Class getImplClass()>, java.lang.Class, java.security.Provider$Service.getImplClass/$r4, java.security.Provider$Service.getImplClass/$r5
  <java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>, java.security.Provider$EngineDescription, java.security.Provider$Service.newInstance/r2, java.security.Provider$Service.newInstance/$r21
  <java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>, java.security.Provider$ServiceKey, java.security.Provider$ServiceKey.equals/r2, java.security.Provider$ServiceKey.equals/r1
  <java.security.Provider$UString: boolean equals(java.lang.Object)>, java.security.Provider$UString, java.security.Provider$UString.equals/r2, java.security.Provider$UString.equals/r1
  <java.security.Provider: void ensureLegacyParsed()>, java.lang.String, java.security.Provider.ensureLegacyParsed/$r11, java.security.Provider.ensureLegacyParsed/$r10
  <java.security.Provider: void ensureLegacyParsed()>, java.lang.String, java.security.Provider.ensureLegacyParsed/$r13, java.security.Provider.ensureLegacyParsed/$r12
  <java.security.Provider: void ensureLegacyParsed()>, java.util.Map$Entry, java.security.Provider.ensureLegacyParsed/r2, java.security.Provider.ensureLegacyParsed/$r9
  <java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>, java.security.Provider$Service, java.security.Provider.parseLegacyPut/r10, java.security.Provider.parseLegacyPut/$r18
  <java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>, java.security.Provider$Service, java.security.Provider.parseLegacyPut/r12, java.security.Provider.parseLegacyPut/$r55
  <java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>, java.security.Provider$Service, java.security.Provider.parseLegacyPut/r38, java.security.Provider.parseLegacyPut/$r37
  <java.security.Provider: void removeInvalidServices(java.util.Map)>, java.security.Provider$Service, java.security.Provider.removeInvalidServices/r4, java.security.Provider.removeInvalidServices/$r7
  <java.security.Provider: void removeInvalidServices(java.util.Map)>, java.util.Map$Entry, java.security.Provider.removeInvalidServices/r3, java.security.Provider.removeInvalidServices/$r6
  <java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>, java.security.ProtectionDomain, java.security.SecureClassLoader.getProtectionDomain/r8, java.security.SecureClassLoader.getProtectionDomain/$r7
  <java.security.SecureRandom: java.lang.String getPrngAlgorithm()>, java.security.Provider, java.security.SecureRandom.getPrngAlgorithm/r2, java.security.SecureRandom.getPrngAlgorithm/$r6
  <java.security.SecureRandom: java.lang.String getPrngAlgorithm()>, java.security.Provider$Service, java.security.SecureRandom.getPrngAlgorithm/r4, java.security.SecureRandom.getPrngAlgorithm/$r8
  <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>, java.security.SecureRandomSpi, <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>/$r4, <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>/$r3
  <java.security.Security: java.lang.Class getSpiClass(java.lang.String)>, java.lang.Class, java.security.Security.getSpiClass/r2, java.security.Security.getSpiClass/$r4
  <java.security.Security: java.lang.Class getSpiClass(java.lang.String)>, java.lang.Error, java.security.Security.getSpiClass/$r17, java.security.Security.getSpiClass/$r16
  <java.security.Signature: boolean isSpi(java.security.Provider$Service)>, java.lang.Boolean, java.security.Signature.isSpi/r2, java.security.Signature.isSpi/$r6
  <java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>, java.security.SignatureSpi, java.security.Signature$Delegate.newInstance/$r16, java.security.Signature$Delegate.newInstance/r8
  <java.security.Signature$Delegate: void chooseFirstProvider()>, java.security.Provider$Service, java.security.Signature$Delegate.chooseFirstProvider/r2, java.security.Signature$Delegate.chooseFirstProvider/$r17
  <java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>, java.lang.RuntimeException, java.security.Signature$Delegate.chooseProvider/$r20, java.security.Signature$Delegate.chooseProvider/r4
  <java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>, java.security.InvalidKeyException, java.security.Signature$Delegate.chooseProvider/$r19, java.security.Signature$Delegate.chooseProvider/r4
  <java.security.Signature$Delegate: void chooseProvider(int,java.security.Key,java.security.SecureRandom)>, java.security.Provider$Service, java.security.Signature$Delegate.chooseProvider/r5, java.security.Signature$Delegate.chooseProvider/$r15
  <java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>, java.security.PrivateKey, java.security.Signature$Delegate.init/$r5, java.security.Signature$Delegate.init/r2
  <java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>, java.security.PrivateKey, java.security.Signature$Delegate.init/$r6, java.security.Signature$Delegate.init/r2
  <java.security.Signature$Delegate: void init(java.security.SignatureSpi,int,java.security.Key,java.security.SecureRandom)>, java.security.PublicKey, java.security.Signature$Delegate.init/$r4, java.security.Signature$Delegate.init/r2
  <java.security.Signature: java.security.Signature getInstance(java.lang.String)>, java.security.Provider$Service, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/r4, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/$r12
  <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>, java.security.Signature, <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>/r2, <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>/$r5
  <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>, java.security.SignatureSpi, <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>/r3, <java.security.Signature: java.security.Signature getInstance(sun.security.jca.GetInstance$Instance,java.lang.String)>/$r6
  <java.security.spec.EncodedKeySpec: void <init>(byte[])>, byte[], java.security.spec.EncodedKeySpec.<init>/$r3, java.security.spec.EncodedKeySpec.<init>/$r2
  <java.security.Timestamp: boolean equals(java.lang.Object)>, java.security.Timestamp, java.security.Timestamp.equals/r2, java.security.Timestamp.equals/r1
  <java.security.UnresolvedPermission: boolean equals(java.lang.Object)>, java.security.UnresolvedPermission, java.security.UnresolvedPermission.equals/r2, java.security.UnresolvedPermission.equals/r1
  <java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>, java.util.List, java.security.UnresolvedPermissionCollection.elements/r5, java.security.UnresolvedPermissionCollection.elements/$r12
  <java.security.UnresolvedPermissionCollection: java.util.List getUnresolvedPermissions(java.security.Permission)>, java.util.List, java.security.UnresolvedPermissionCollection.getUnresolvedPermissions/$r9, java.security.UnresolvedPermissionCollection.getUnresolvedPermissions/$r8
  <java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>, java.security.UnresolvedPermission, java.security.UnresolvedPermissionCollection.add/r3, java.security.UnresolvedPermissionCollection.add/r1
  <java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>, java.util.List, java.security.UnresolvedPermissionCollection.add/r5, java.security.UnresolvedPermissionCollection.add/$r15
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r16, java.security.UnresolvedPermission.resolve/$r15
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r24, java.security.UnresolvedPermission.resolve/$r23
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r32, java.security.UnresolvedPermission.resolve/$r31
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r40, java.security.UnresolvedPermission.resolve/$r39
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r49, java.security.UnresolvedPermission.resolve/$r48
  <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>, java.security.Permission, java.security.UnresolvedPermission.resolve/$r56, java.security.UnresolvedPermission.resolve/$r55
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.Certificate[], java.security.UnresolvedPermission.<init>/$r18, java.security.UnresolvedPermission.<init>/$r17
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.Certificate[], java.security.UnresolvedPermission.<init>/$r9, java.security.UnresolvedPermission.<init>/$r8
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, java.security.UnresolvedPermission.<init>/$r12, java.security.UnresolvedPermission.<init>/$r11
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, java.security.UnresolvedPermission.<init>/$r15, java.security.UnresolvedPermission.<init>/$r14
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, java.security.UnresolvedPermission.<init>/$r23, java.security.UnresolvedPermission.<init>/$r22
  <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, java.security.UnresolvedPermission.<init>/$r26, java.security.UnresolvedPermission.<init>/$r25
  <java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>, java.text.AttributedCharacterIterator$Attribute[], java.text.AttributedString$AttributedStringIterator.<init>/$r5, java.text.AttributedString$AttributedStringIterator.<init>/$r4
  <java.text.AttributedString$AttributedStringIterator: void <init>(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)>, java.text.AttributedCharacterIterator$Attribute[], java.text.AttributedString$AttributedStringIterator.<init>/$r6, java.text.AttributedString$AttributedStringIterator.<init>/$r5
  <java.text.AttributedString$AttributeMap: java.lang.Object get(java.lang.Object)>, java.text.AttributedCharacterIterator$Attribute, java.text.AttributedString$AttributeMap.get/$r3, java.text.AttributedString$AttributeMap.get/r1
  <java.text.AttributedString$AttributeMap: java.util.Set entrySet()>, java.text.AttributedCharacterIterator$Attribute, java.text.AttributedString$AttributeMap.entrySet/r4, java.text.AttributedString$AttributeMap.entrySet/$r15
  <java.text.AttributedString: int ensureRunBreak(int,boolean)>, java.util.Vector, <java.text.AttributedString: int ensureRunBreak(int,boolean)>/r11, <java.text.AttributedString: int ensureRunBreak(int,boolean)>/$r17
  <java.text.AttributedString: int ensureRunBreak(int,boolean)>, java.util.Vector, <java.text.AttributedString: int ensureRunBreak(int,boolean)>/r12, <java.text.AttributedString: int ensureRunBreak(int,boolean)>/$r18
  <java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>, java.text.AttributedCharacterIterator$Attribute, <java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>/r4, <java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])>/$r17
  <java.text.AttributedString: void setAttributes(java.util.Map,int)>, java.util.Map$Entry, java.text.AttributedString.setAttributes/r5, java.text.AttributedString.setAttributes/$r9
  <java.text.AttributeEntry: boolean equals(java.lang.Object)>, java.text.AttributeEntry, java.text.AttributeEntry.equals/r2, java.text.AttributeEntry.equals/r1
  <java.text.BreakDictionary: void readDictionaryFile(java.lang.String)>, java.io.BufferedInputStream, java.text.BreakDictionary.readDictionaryFile/r3, java.text.BreakDictionary.readDictionaryFile/$r6
  <java.text.BreakIterator$BreakIteratorCache: java.text.BreakIterator createBreakInstance()>, java.text.BreakIterator, java.text.BreakIterator$BreakIteratorCache.createBreakInstance/$r3, java.text.BreakIterator$BreakIteratorCache.createBreakInstance/$r2
  <java.text.BreakIterator$BreakIteratorCache: void <init>(java.util.Locale,java.text.BreakIterator)>, java.text.BreakIterator, java.text.BreakIterator$BreakIteratorCache.<init>/$r4, java.text.BreakIterator$BreakIteratorCache.<init>/$r3
  <java.text.BreakIterator$BreakIteratorGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.text.spi.BreakIteratorProvider, <java.text.BreakIterator$BreakIteratorGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.text.BreakIterator$BreakIteratorGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.text.BreakIterator$BreakIteratorGetter: java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.text.BreakIterator$BreakIteratorGetter: java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r7, <java.text.BreakIterator$BreakIteratorGetter: java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r6
  <java.text.BreakIterator: java.text.BreakIterator createBreakInstance(java.util.Locale,int,java.lang.String,java.lang.String)>, java.text.BreakIterator, java.text.BreakIterator.createBreakInstance/r5, java.text.BreakIterator.createBreakInstance/$r11
  <java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int,java.lang.String,java.lang.String)>, java.text.BreakIterator$BreakIteratorCache, java.text.BreakIterator.getBreakInstance/r4, java.text.BreakIterator.getBreakInstance/$r9
  <java.text.BreakIterator: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>, java.util.ResourceBundle, java.text.BreakIterator.getBundle/$r4, java.text.BreakIterator.getBundle/$r3
  <java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>, java.text.AttributedString, java.text.CharacterIteratorFieldDelegate.getIterator/$r9, java.text.CharacterIteratorFieldDelegate.getIterator/$r8
  <java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>, java.text.AttributedString, <java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/r4, <java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/$r7
  <java.text.DateFormat$DateFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.text.spi.DateFormatProvider, <java.text.DateFormat$DateFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.text.DateFormat$DateFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r11, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r10
  <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r7, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r6
  <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r9, <java.text.DateFormat$DateFormatGetter: java.text.DateFormat getObject(java.text.spi.DateFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r8
  <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Number, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r7, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.util.Date, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>, java.text.DateFormat, java.text.DateFormat.get/r3, java.text.DateFormat.get/$r18
  <java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.text.spi.DateFormatSymbolsProvider, <java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.text.DateFormatSymbols$DateFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>, java.text.DateFormatSymbols, <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>/r3, <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>/$r5
  <java.text.DateFormatSymbols: java.util.ResourceBundle cacheLookup(java.util.Locale)>, java.lang.ref.SoftReference, java.text.DateFormatSymbols.cacheLookup/r2, java.text.DateFormatSymbols.cacheLookup/$r4
  <java.text.DateFormatSymbols: java.util.ResourceBundle cacheLookup(java.util.Locale)>, java.util.ResourceBundle, java.text.DateFormatSymbols.cacheLookup/$r10, java.text.DateFormatSymbols.cacheLookup/$r9
  <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>, java.lang.String[], java.text.DateFormatSymbols.initializeData/$r6, java.text.DateFormatSymbols.initializeData/$r5
  <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>, java.lang.String[], java.text.DateFormatSymbols.initializeData/$r7, java.text.DateFormatSymbols.initializeData/$r6
  <java.text.DecimalFormat: java.lang.Object clone()>, java.text.DecimalFormat, java.text.DecimalFormat.clone/r1, java.text.DecimalFormat.clone/$r2
  <java.text.DecimalFormat: java.lang.Object clone()>, java.text.DecimalFormatSymbols, java.text.DecimalFormat.clone/$r5, java.text.DecimalFormat.clone/$r4
  <java.text.DecimalFormat: java.lang.Object clone()>, java.text.DigitList, java.text.DecimalFormat.clone/$r8, java.text.DecimalFormat.clone/$r7
  <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Number, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r11, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Number, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r5, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.math.BigDecimal, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r7, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.math.BigInteger, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.math.BigInteger, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r9, <java.text.DecimalFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.lang.Number, java.text.DecimalFormat.formatToCharacterIterator/$r6, java.text.DecimalFormat.formatToCharacterIterator/r1
  <java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.lang.Number, java.text.DecimalFormat.formatToCharacterIterator/$r8, java.text.DecimalFormat.formatToCharacterIterator/r1
  <java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.math.BigDecimal, java.text.DecimalFormat.formatToCharacterIterator/$r10, java.text.DecimalFormat.formatToCharacterIterator/r1
  <java.text.DecimalFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.math.BigInteger, java.text.DecimalFormat.formatToCharacterIterator/$r12, java.text.DecimalFormat.formatToCharacterIterator/r1
  <java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>, java.text.DecimalFormatSymbols, java.text.DecimalFormat.getDecimalFormatSymbols/$r4, java.text.DecimalFormat.getDecimalFormatSymbols/$r3
  <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>, java.text.FieldPosition[], <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/$r19, <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/$r18
  <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>, java.text.FieldPosition[], <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/$r20, <java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/$r19
  <java.text.DecimalFormatSymbols$DecimalFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.text.spi.DecimalFormatSymbolsProvider, <java.text.DecimalFormatSymbols$DecimalFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.text.DecimalFormatSymbols$DecimalFormatSymbolsGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.text.DecimalFormatSymbols: java.lang.Object clone()>, java.text.DecimalFormatSymbols, java.text.DecimalFormatSymbols.clone/$r3, java.text.DecimalFormatSymbols.clone/$r2
  <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>, java.text.DecimalFormatSymbols, <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>/r3, <java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>/$r5
  <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>, java.lang.Object[], java.text.DecimalFormatSymbols.initialize/r2, java.text.DecimalFormatSymbols.initialize/$r7
  <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>, java.lang.Object[], java.text.DecimalFormatSymbols.initialize/$r7, java.text.DecimalFormatSymbols.initialize/$r6
  <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>, java.lang.String[], java.text.DecimalFormatSymbols.initialize/$r10, java.text.DecimalFormatSymbols.initialize/$r9
  <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>, java.lang.String[], java.text.DecimalFormatSymbols.initialize/r11, java.text.DecimalFormatSymbols.initialize/$r10
  <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>, java.lang.String, java.text.DecimalFormatSymbols.initialize/$r35, java.text.DecimalFormatSymbols.initialize/$r34
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>, java.text.DecimalFormatSymbols, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$r6, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$r5
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r22, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r21
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r23, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r22
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r30, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r29
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r34, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r33
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r42, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r41
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.lang.Integer, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/r6, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r28
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.util.Stack, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r18, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r17
  <java.text.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>, java.util.Stack, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/r5, java.text.DictionaryBasedBreakIterator.divideUpDictionaryRange/$r18
  <java.text.DigitList: java.lang.Object clone()>, java.text.DigitList, java.text.DigitList.clone/r1, java.text.DigitList.clone/$r3
  <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Object[], <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Object[], <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r5, <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r4
  <java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>, java.lang.String, java.text.MessageFormat.subformat/r6, java.text.MessageFormat.subformat/r5
  <java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.lang.Object[], java.text.MessageFormat.formatToCharacterIterator/$r7, java.text.MessageFormat.formatToCharacterIterator/r1
  <java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.lang.Object[], java.text.MessageFormat.formatToCharacterIterator/$r8, java.text.MessageFormat.formatToCharacterIterator/$r7
  <java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.text.AttributedCharacterIterator[], java.text.MessageFormat.formatToCharacterIterator/$r13, java.text.MessageFormat.formatToCharacterIterator/$r12
  <java.text.MessageFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.text.AttributedCharacterIterator[], java.text.MessageFormat.formatToCharacterIterator/$r14, java.text.MessageFormat.formatToCharacterIterator/$r13
  <java.text.Normalizer$Form: java.text.Normalizer$Form[] values()>, java.text.Normalizer$Form[], java.text.Normalizer$Form.values/$r2, java.text.Normalizer$Form.values/$r1
  <java.text.NumberFormat: java.lang.Object clone()>, java.text.NumberFormat, java.text.NumberFormat.clone/r1, java.text.NumberFormat.clone/$r2
  <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Number, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r5, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.lang.Number, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r7, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>, java.math.BigInteger, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/r1
  <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>, java.lang.String[], <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/$r11, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/$r10
  <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>, java.lang.String[], <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/r12, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/$r11
  <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>, java.text.NumberFormat, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/r3, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/$r8
  <java.text.NumberFormat$NumberFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.text.spi.NumberFormatProvider, <java.text.NumberFormat$NumberFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.text.NumberFormat$NumberFormatGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r7, <java.text.NumberFormat$NumberFormatGetter: java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r6
  <java.text.RuleBasedBreakIterator: byte[] readFile(java.lang.String)>, java.io.BufferedInputStream, java.text.RuleBasedBreakIterator.readFile/r3, java.text.RuleBasedBreakIterator.readFile/$r6
  <java.text.RuleBasedBreakIterator: java.lang.Object clone()>, java.text.CharacterIterator, java.text.RuleBasedBreakIterator.clone/$r6, java.text.RuleBasedBreakIterator.clone/$r5
  <java.text.RuleBasedBreakIterator: java.lang.Object clone()>, java.text.RuleBasedBreakIterator, java.text.RuleBasedBreakIterator.clone/r1, java.text.RuleBasedBreakIterator.clone/$r2
  <java.text.RuleBasedBreakIterator$SafeCharIterator: java.lang.Object clone()>, java.text.CharacterIterator, java.text.RuleBasedBreakIterator$SafeCharIterator.clone/r12, java.text.RuleBasedBreakIterator$SafeCharIterator.clone/$r11
  <java.text.RuleBasedBreakIterator$SafeCharIterator: java.lang.Object clone()>, java.text.RuleBasedBreakIterator$SafeCharIterator, java.text.RuleBasedBreakIterator$SafeCharIterator.clone/r4, java.text.RuleBasedBreakIterator$SafeCharIterator.clone/$r3
  <java.text.SimpleDateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.lang.Number, java.text.SimpleDateFormat.formatToCharacterIterator/$r9, java.text.SimpleDateFormat.formatToCharacterIterator/r1
  <java.text.SimpleDateFormat: java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)>, java.util.Date, java.text.SimpleDateFormat.formatToCharacterIterator/$r6, java.text.SimpleDateFormat.formatToCharacterIterator/r1
  <java.text.SimpleDateFormat: void initialize(java.util.Locale)>, java.text.NumberFormat, java.text.SimpleDateFormat.initialize/$r15, java.text.SimpleDateFormat.initialize/$r14
  <java.text.SimpleDateFormat: void initialize(java.util.Locale)>, java.text.NumberFormat, java.text.SimpleDateFormat.initialize/$r6, java.text.SimpleDateFormat.initialize/$r5
  <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>, java.lang.String[], <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/r3, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/$r8
  <java.text.SimpleDateFormat: void zeroPaddingNumber(int,int,int,java.lang.StringBuffer)>, java.text.DecimalFormat, java.text.SimpleDateFormat.zeroPaddingNumber/$r4, java.text.SimpleDateFormat.zeroPaddingNumber/$r3
  <java.text.StringCharacterIterator: java.lang.Object clone()>, java.text.StringCharacterIterator, java.text.StringCharacterIterator.clone/r1, java.text.StringCharacterIterator.clone/$r2
  <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$r4, <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$r8
  <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$r8, <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/$r7
  <java.util.AbstractMap: boolean containsKey(java.lang.Object)>, java.util.Map$Entry, java.util.AbstractMap.containsKey/r3, java.util.AbstractMap.containsKey/$r5
  <java.util.AbstractMap: boolean containsKey(java.lang.Object)>, java.util.Map$Entry, java.util.AbstractMap.containsKey/r8, java.util.AbstractMap.containsKey/$r7
  <java.util.AbstractMap: boolean equals(java.lang.Object)>, java.util.Map$Entry, java.util.AbstractMap.equals/r4, java.util.AbstractMap.equals/$r8
  <java.util.AbstractMap: boolean equals(java.lang.Object)>, java.util.Map, java.util.AbstractMap.equals/r2, java.util.AbstractMap.equals/r1
  <java.util.AbstractMap: java.lang.String toString()>, java.util.Map$Entry, java.util.AbstractMap.toString/r3, java.util.AbstractMap.toString/$r9
  <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>/$r5, <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>/$r4
  <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>, java.lang.Object[], <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r4, <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r3
  <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>, java.lang.Object[], <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r4, <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r7
  <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>, java.lang.Object[], <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r7, <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/$r6
  <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>, java.lang.Object[], <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>/$r3, <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>/$r2
  <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>, java.lang.Comparable, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r3, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r2
  <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>, java.lang.Comparable, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r6, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r5
  <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>, java.lang.Comparable, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r9, <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>/$r8
  <java.util.Arrays: void sort(java.lang.Object[])>, java.lang.Object[], <java.util.Arrays: void sort(java.lang.Object[])>/r1, <java.util.Arrays: void sort(java.lang.Object[])>/$r3
  <java.util.Arrays: void sort(java.lang.Object[])>, java.lang.Object[], <java.util.Arrays: void sort(java.lang.Object[])>/$r3, <java.util.Arrays: void sort(java.lang.Object[])>/$r2
  <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>, java.lang.Object[], <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>/r2, <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>/$r4
  <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>, java.lang.Object[], <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>/$r4, <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>/$r3
  <java.util.Calendar: java.lang.Object clone()>, java.util.Calendar, java.util.Calendar.clone/r1, java.util.Calendar.clone/$r2
  <java.util.Calendar: java.lang.Object clone()>, java.util.TimeZone, java.util.Calendar.clone/$r14, java.util.Calendar.clone/$r13
  <java.util.Calendar: java.util.TimeZone getTimeZone()>, java.util.TimeZone, java.util.Calendar.getTimeZone/$r3, java.util.Calendar.getTimeZone/$r2
  <java.util.Calendar: void setTimeInMillis(long)>, sun.util.calendar.ZoneInfo, java.util.Calendar.setTimeInMillis/$r3, java.util.Calendar.setTimeInMillis/$r2
  <java.util.Calendar: void setWeekCountData(java.util.Locale)>, int[], java.util.Calendar.setWeekCountData/r3, java.util.Calendar.setWeekCountData/$r5
  <java.util.Collections: void sort(java.util.List)>, java.lang.Comparable, <java.util.Collections: void sort(java.util.List)>/$r5, <java.util.Collections: void sort(java.util.List)>/$r4
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$HashEntry entryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int)>, java.util.concurrent.ConcurrentHashMap$HashEntry, java.util.concurrent.ConcurrentHashMap.entryAt/$r1, java.util.concurrent.ConcurrentHashMap.entryAt/$r3
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$HashEntry entryForHash(java.util.concurrent.ConcurrentHashMap$Segment,int)>, java.util.concurrent.ConcurrentHashMap$HashEntry, java.util.concurrent.ConcurrentHashMap.entryForHash/$r3, java.util.concurrent.ConcurrentHashMap.entryForHash/$r5
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment ensureSegment(int)>, java.util.concurrent.ConcurrentHashMap$HashEntry[], java.util.concurrent.ConcurrentHashMap.ensureSegment/r4, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r11
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment ensureSegment(int)>, java.util.concurrent.ConcurrentHashMap$Segment, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r14, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r13
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment ensureSegment(int)>, java.util.concurrent.ConcurrentHashMap$Segment, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r18, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r17
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment ensureSegment(int)>, java.util.concurrent.ConcurrentHashMap$Segment, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r9, java.util.concurrent.ConcurrentHashMap.ensureSegment/$r8
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment segmentAt(java.util.concurrent.ConcurrentHashMap$Segment[],int)>, java.util.concurrent.ConcurrentHashMap$Segment, java.util.concurrent.ConcurrentHashMap.segmentAt/$r1, java.util.concurrent.ConcurrentHashMap.segmentAt/$r3
  <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment segmentForHash(int)>, java.util.concurrent.ConcurrentHashMap$Segment, java.util.concurrent.ConcurrentHashMap.segmentForHash/$r4, java.util.concurrent.ConcurrentHashMap.segmentForHash/$r3
  <java.util.concurrent.ConcurrentHashMap$Segment: void rehash(java.util.concurrent.ConcurrentHashMap$HashEntry)>, java.util.concurrent.ConcurrentHashMap$HashEntry[], java.util.concurrent.ConcurrentHashMap$Segment.rehash/r3, java.util.concurrent.ConcurrentHashMap$Segment.rehash/$r9
  <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>, java.util.concurrent.ConcurrentHashMap$HashEntry[], <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>/$r6, <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>/$r5
  <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>, java.util.concurrent.ConcurrentHashMap$Segment[], <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>/r2, <java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>/$r7
  <java.util.Currency$CurrencyNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.util.spi.CurrencyNameProvider, <java.util.Currency$CurrencyNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <java.util.Currency$CurrencyNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <java.util.Currency$CurrencyNameGetter: java.lang.String getObject(java.util.spi.CurrencyNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.Integer, <java.util.Currency$CurrencyNameGetter: java.lang.String getObject(java.util.spi.CurrencyNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r7, <java.util.Currency$CurrencyNameGetter: java.lang.String getObject(java.util.spi.CurrencyNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r6
  <java.util.Currency: java.lang.String getSymbol(java.util.Locale)>, java.lang.String, <java.util.Currency: java.lang.String getSymbol(java.util.Locale)>/r4, <java.util.Currency: java.lang.String getSymbol(java.util.Locale)>/$r9
  <java.util.Currency: java.util.Currency getInstance(java.lang.String,int,int)>, java.util.Currency, <java.util.Currency: java.util.Currency getInstance(java.lang.String,int,int)>/r3, <java.util.Currency: java.util.Currency getInstance(java.lang.String,int,int)>/$r6
  <java.util.Date: boolean equals(java.lang.Object)>, java.util.Date, java.util.Date.equals/$r2, java.util.Date.equals/r1
  <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize()>, sun.util.calendar.BaseCalendar$Date, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize()>/$r6, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize()>/$r5
  <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>, sun.util.calendar.BaseCalendar$Date, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/r1, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/$r11
  <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>, sun.util.calendar.BaseCalendar$Date, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/r1, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/$r15
  <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>, sun.util.calendar.BaseCalendar$Date, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/r8, <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize(sun.util.calendar.BaseCalendar$Date)>/$r7
  <java.util.Date: sun.util.calendar.BaseCalendar getJulianCalendar()>, sun.util.calendar.BaseCalendar, java.util.Date.getJulianCalendar/$r2, java.util.Date.getJulianCalendar/$r1
  <java.util.GregorianCalendar: int actualMonthLength()>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.actualMonthLength/r1, java.util.GregorianCalendar.actualMonthLength/$r6
  <java.util.GregorianCalendar: int computeFields(int,int)>, sun.util.calendar.ZoneInfo, <java.util.GregorianCalendar: int computeFields(int,int)>/$r6, <java.util.GregorianCalendar: int computeFields(int,int)>/r1
  <java.util.GregorianCalendar: int getActualMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getActualMaximum/r1, java.util.GregorianCalendar.getActualMaximum/$r16
  <java.util.GregorianCalendar: int getActualMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getActualMaximum/r1, java.util.GregorianCalendar.getActualMaximum/$r19
  <java.util.GregorianCalendar: int getActualMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getActualMaximum/r1, java.util.GregorianCalendar.getActualMaximum/$r23
  <java.util.GregorianCalendar: int getActualMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getActualMaximum/r1, java.util.GregorianCalendar.getActualMaximum/$r24
  <java.util.GregorianCalendar: int getActualMaximum(int)>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.getActualMaximum/r21, java.util.GregorianCalendar.getActualMaximum/$r20
  <java.util.GregorianCalendar: int getActualMaximum(int)>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.getActualMaximum/r4, java.util.GregorianCalendar.getActualMaximum/$r7
  <java.util.GregorianCalendar: int getLeastMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getLeastMaximum/r1, java.util.GregorianCalendar.getLeastMaximum/$r2
  <java.util.GregorianCalendar: int getMaximum(int)>, java.util.GregorianCalendar, java.util.GregorianCalendar.getMaximum/r1, java.util.GregorianCalendar.getMaximum/$r2
  <java.util.GregorianCalendar: java.lang.Object clone()>, java.util.GregorianCalendar, java.util.GregorianCalendar.clone/r1, java.util.GregorianCalendar.clone/$r2
  <java.util.GregorianCalendar: java.lang.Object clone()>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.clone/$r11, java.util.GregorianCalendar.clone/$r10
  <java.util.GregorianCalendar: java.lang.Object clone()>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.clone/$r5, java.util.GregorianCalendar.clone/$r4
  <java.util.GregorianCalendar: java.util.GregorianCalendar getNormalizedCalendar()>, java.util.GregorianCalendar, java.util.GregorianCalendar.getNormalizedCalendar/r1, java.util.GregorianCalendar.getNormalizedCalendar/$r2
  <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar$Date getCalendarDate(long)>, sun.util.calendar.BaseCalendar$Date, java.util.GregorianCalendar.getCalendarDate/r3, java.util.GregorianCalendar.getCalendarDate/$r5
  <java.util.GregorianCalendar: sun.util.calendar.BaseCalendar getJulianCalendarSystem()>, sun.util.calendar.JulianCalendar, java.util.GregorianCalendar.getJulianCalendarSystem/$r2, java.util.GregorianCalendar.getJulianCalendarSystem/$r1
  <java.util.GregorianCalendar: void computeTime()>, sun.util.calendar.ZoneInfo, java.util.GregorianCalendar.computeTime/$r19, java.util.GregorianCalendar.computeTime/r16
  <java.util.HashMap: void putAllForCreate(java.util.Map)>, java.util.Map$Entry, java.util.HashMap.putAllForCreate/r3, java.util.HashMap.putAllForCreate/$r5
  <java.util.Hashtable: boolean equals(java.lang.Object)>, java.util.Map$Entry, java.util.Hashtable.equals/r4, java.util.Hashtable.equals/$r8
  <java.util.Hashtable: boolean equals(java.lang.Object)>, java.util.Map, java.util.Hashtable.equals/r2, java.util.Hashtable.equals/r1
  <java.util.JapaneseImperialCalendar: int computeFields(int,int)>, sun.util.calendar.LocalGregorianCalendar$Date, <java.util.JapaneseImperialCalendar: int computeFields(int,int)>/r57, <java.util.JapaneseImperialCalendar: int computeFields(int,int)>/$r56
  <java.util.JapaneseImperialCalendar: int computeFields(int,int)>, sun.util.calendar.ZoneInfo, <java.util.JapaneseImperialCalendar: int computeFields(int,int)>/$r7, <java.util.JapaneseImperialCalendar: int computeFields(int,int)>/r1
  <java.util.JapaneseImperialCalendar: void add(int,int)>, sun.util.calendar.LocalGregorianCalendar$Date, java.util.JapaneseImperialCalendar.add/r1, java.util.JapaneseImperialCalendar.add/$r4
  <java.util.JapaneseImperialCalendar: void add(int,int)>, sun.util.calendar.LocalGregorianCalendar$Date, java.util.JapaneseImperialCalendar.add/r8, java.util.JapaneseImperialCalendar.add/$r7
  <java.util.JapaneseImperialCalendar: void <clinit>()>, sun.util.calendar.LocalGregorianCalendar, java.util.JapaneseImperialCalendar.<clinit>/$r8, java.util.JapaneseImperialCalendar.<clinit>/$r7
  <java.util.JapaneseImperialCalendar: void computeTime()>, sun.util.calendar.ZoneInfo, java.util.JapaneseImperialCalendar.computeTime/$r10, java.util.JapaneseImperialCalendar.computeTime/r1
  <java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>, java.lang.String, java.util.jar.Attributes.put/$r5, java.util.jar.Attributes.put/r2
  <java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>, java.util.jar.Attributes$Name, java.util.jar.Attributes.put/$r4, java.util.jar.Attributes.put/r1
  <java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>, java.lang.String, <java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>/$r4, <java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>/$r3
  <java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>, java.lang.String, <java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>/$r3, <java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>/$r2
  <java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>, java.lang.String, java.util.jar.Attributes.putValue/$r5, java.util.jar.Attributes.putValue/$r4
  <java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>, java.util.jar.Attributes$Name, java.util.jar.Attributes$Name.equals/$r4, java.util.jar.Attributes$Name.equals/r1
  <java.util.jar.JarFile$1: java.util.jar.JarFile$JarFileEntry nextElement()>, java.util.zip.ZipEntry, <java.util.jar.JarFile$1: java.util.jar.JarFile$JarFileEntry nextElement()>/r1, <java.util.jar.JarFile$1: java.util.jar.JarFile$JarFileEntry nextElement()>/$r3
  <java.util.jar.JarFile: boolean isKnownToNotHaveClassPathAttribute()>, java.lang.String, java.util.jar.JarFile.isKnownToNotHaveClassPathAttribute/$r6, java.util.jar.JarFile.isKnownToNotHaveClassPathAttribute/$r5
  <java.util.jar.JarFile$JarFileEntry: java.security.CodeSigner[] getCodeSigners()>, java.security.CodeSigner[], java.util.jar.JarFile$JarFileEntry.getCodeSigners/$r13, java.util.jar.JarFile$JarFileEntry.getCodeSigners/$r15
  <java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>, java.util.jar.JarEntry, java.util.jar.JarFile.getInputStream/$r9, java.util.jar.JarFile.getInputStream/r1
  <java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>, java.util.jar.JarEntry, java.util.jar.JarFile.getJarEntry/$r3, java.util.jar.JarFile.getJarEntry/$r2
  <java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>, java.util.jar.Manifest, java.util.jar.JarFile.getManifestFromReference/$r8, java.util.jar.JarFile.getManifestFromReference/$r7
  <java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>, java.util.jar.JarEntry, java.util.jar.JarInputStream.getNextJarEntry/$r2, java.util.jar.JarInputStream.getNextJarEntry/$r1
  <java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()>, java.util.jar.JarEntry, java.util.jar.JarInputStream.getNextEntry/r1, java.util.jar.JarInputStream.getNextEntry/$r3
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>, java.util.jar.JarEntry, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r2, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r4
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>, java.util.jar.JarEntry, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r2, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r6
  <java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>, java.security.cert.Certificate[], java.util.jar.JarVerifier.mapSignersToCertArray/$r8, java.util.jar.JarVerifier.mapSignersToCertArray/$r7
  <java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>, java.security.cert.Certificate[], java.util.jar.JarVerifier.mapSignersToCertArray/$r9, java.util.jar.JarVerifier.mapSignersToCertArray/$r8
  <java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.lang.String)>, java.security.CodeSigner[], java.util.jar.JarVerifier.getCodeSigners/$r4, java.util.jar.JarVerifier.getCodeSigners/$r3
  <java.util.jar.JarVerifier: java.security.CodeSigner[] getCodeSigners(java.lang.String)>, java.security.CodeSigner[], java.util.jar.JarVerifier.getCodeSigners/$r5, java.util.jar.JarVerifier.getCodeSigners/$r4
  <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>, byte[], java.util.jar.JarVerifier.processEntry/$r46, java.util.jar.JarVerifier.processEntry/$r45
  <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>, byte[], java.util.jar.JarVerifier.processEntry/r47, java.util.jar.JarVerifier.processEntry/$r46
  <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>, sun.security.util.SignatureFileVerifier, java.util.jar.JarVerifier.processEntry/r6, java.util.jar.JarVerifier.processEntry/$r24
  <java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>, java.util.jar.Attributes, java.util.jar.Manifest.getAttributes/$r4, java.util.jar.Manifest.getAttributes/$r3
  <java.util.LinkedHashMap$Entry: void recordAccess(java.util.HashMap)>, java.util.LinkedHashMap, java.util.LinkedHashMap$Entry.recordAccess/r2, java.util.LinkedHashMap$Entry.recordAccess/r1
  <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>, java.util.LinkedHashMap$Entry, java.util.LinkedHashMap.get/r2, java.util.LinkedHashMap.get/$r3
  <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>/$r7
  <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>/$r7, <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>/$r6
  <java.util.Locale: boolean equals(java.lang.Object)>, java.util.Locale, java.util.Locale.equals/r2, java.util.Locale.equals/r1
  <java.util.Locale: java.util.Locale getDefault()>, java.lang.String, java.util.Locale.getDefault/r1, java.util.Locale.getDefault/$r6
  <java.util.Locale: java.util.Locale getDefault()>, java.lang.String, java.util.Locale.getDefault/r2, java.util.Locale.getDefault/$r8
  <java.util.Locale: java.util.Locale getDefault()>, java.lang.String, java.util.Locale.getDefault/r3, java.util.Locale.getDefault/$r10
  <java.util.Locale: java.util.Locale getDefault()>, java.lang.String, java.util.Locale.getDefault/r4, java.util.Locale.getDefault/$r12
  <java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.util.Locale, java.util.Locale.getInstance/r5, java.util.Locale.getInstance/$r15
  <java.util.Locale: java.util.Locale getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.util.Locale, java.util.Locale.getInstance/r6, java.util.Locale.getInstance/$r18
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>, java.util.List, java.util.logging.Level$KnownLevel.findByLocalizedLevelName/r3, java.util.logging.Level$KnownLevel.findByLocalizedLevelName/$r8
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByLocalizedLevelName(java.lang.String)>, java.util.logging.Level$KnownLevel, java.util.logging.Level$KnownLevel.findByLocalizedLevelName/r5, java.util.logging.Level$KnownLevel.findByLocalizedLevelName/$r9
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>, java.util.List, java.util.logging.Level$KnownLevel.findByName/r2, java.util.logging.Level$KnownLevel.findByName/$r3
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByName(java.lang.String)>, java.util.logging.Level$KnownLevel, java.util.logging.Level$KnownLevel.findByName/$r5, java.util.logging.Level$KnownLevel.findByName/$r4
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>, java.util.List, java.util.logging.Level$KnownLevel.findByValue/r1, java.util.logging.Level$KnownLevel.findByValue/$r3
  <java.util.logging.Level$KnownLevel: java.util.logging.Level$KnownLevel findByValue(int)>, java.util.logging.Level$KnownLevel, java.util.logging.Level$KnownLevel.findByValue/$r5, java.util.logging.Level$KnownLevel.findByValue/$r4
  <java.util.logging.Level$KnownLevel: void add(java.util.logging.Level)>, java.util.List, java.util.logging.Level$KnownLevel.add/r14, java.util.logging.Level$KnownLevel.add/$r13
  <java.util.logging.Level$KnownLevel: void add(java.util.logging.Level)>, java.util.List, java.util.logging.Level$KnownLevel.add/r3, java.util.logging.Level$KnownLevel.add/$r6
  <java.util.logging.Logger: java.lang.ClassLoader getCallersClassLoader()>, java.lang.ClassLoader, java.util.logging.Logger.getCallersClassLoader/$r4, java.util.logging.Logger.getCallersClassLoader/$r3
  <java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>, java.util.logging.Handler[], java.util.logging.Logger.getHandlers/$r7, java.util.logging.Logger.getHandlers/$r6
  <java.util.logging.Logger: java.util.ResourceBundle findSystemResourceBundle(java.util.Locale)>, java.util.ResourceBundle, java.util.logging.Logger.findSystemResourceBundle/$r3, java.util.logging.Logger.findSystemResourceBundle/$r2
  <java.util.logging.Logger$LoggerHelper: boolean getBooleanProperty(java.lang.String)>, java.lang.String, java.util.logging.Logger$LoggerHelper.getBooleanProperty/r2, java.util.logging.Logger$LoggerHelper.getBooleanProperty/$r3
  <java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>, java.util.logging.Logger, java.util.logging.Logger.doSetParent/r6, java.util.logging.Logger.doSetParent/$r12
  <java.util.logging.Logger: void doSetParent(java.util.logging.Logger)>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.Logger.doSetParent/r4, java.util.logging.Logger.doSetParent/$r11
  <java.util.logging.Logger: void removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.Logger.removeChildLogger/r5, java.util.logging.Logger.removeChildLogger/$r8
  <java.util.logging.Logger: void updateEffectiveLevel()>, java.util.logging.Logger, java.util.logging.Logger.updateEffectiveLevel/r2, java.util.logging.Logger.updateEffectiveLevel/$r12
  <java.util.logging.Logger: void updateEffectiveLevel()>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.Logger.updateEffectiveLevel/r1, java.util.logging.Logger.updateEffectiveLevel/$r11
  <java.util.logging.LogManager$1: java.lang.Object run()>, java.util.logging.LogManager, java.util.logging.LogManager$1.run/$r14, java.util.logging.LogManager$1.run/$r13
  <java.util.logging.LogManager$1: java.lang.Object run()>, java.util.logging.LogManager, java.util.logging.LogManager$1.run/$r7, java.util.logging.LogManager$1.run/$r6
  <java.util.logging.LogManager$4: java.lang.Object run()>, java.util.logging.Handler, java.util.logging.LogManager$4.run/r4, java.util.logging.LogManager$4.run/$r10
  <java.util.logging.LogManager: java.lang.String[] parseClassNames(java.lang.String)>, java.lang.String[], java.util.logging.LogManager.parseClassNames/$r11, java.util.logging.LogManager.parseClassNames/$r10
  <java.util.logging.LogManager: java.util.logging.LogManager$LoggerContext getUserContext()>, java.util.logging.LogManager$LoggerContext, java.util.logging.LogManager.getUserContext/r1, java.util.logging.LogManager.getUserContext/$r8
  <java.util.logging.LogManager$LoggerContext: boolean addLocalLogger(java.util.logging.Logger)>, java.util.logging.Logger, java.util.logging.LogManager$LoggerContext.addLocalLogger/r7, java.util.logging.LogManager$LoggerContext.addLocalLogger/$r24
  <java.util.logging.LogManager$LoggerContext: boolean addLocalLogger(java.util.logging.Logger)>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.LogManager$LoggerContext.addLocalLogger/r3, java.util.logging.LogManager$LoggerContext.addLocalLogger/$r12
  <java.util.logging.LogManager$LoggerContext: java.util.logging.Logger findLogger(java.lang.String)>, java.util.logging.Logger, java.util.logging.LogManager$LoggerContext.findLogger/r3, java.util.logging.LogManager$LoggerContext.findLogger/$r6
  <java.util.logging.LogManager$LoggerContext: java.util.logging.Logger findLogger(java.lang.String)>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.LogManager$LoggerContext.findLogger/r2, java.util.logging.LogManager$LoggerContext.findLogger/$r5
  <java.util.logging.LogManager$LoggerContext: java.util.logging.LogManager$LogNode getNode(java.lang.String)>, java.util.logging.LogManager$LogNode, java.util.logging.LogManager$LoggerContext.getNode/r4, java.util.logging.LogManager$LoggerContext.getNode/$r9
  <java.util.logging.LogManager$LoggerWeakRef: void dispose()>, java.util.logging.Logger, java.util.logging.LogManager$LoggerWeakRef.dispose/r1, java.util.logging.LogManager$LoggerWeakRef.dispose/$r9
  <java.util.logging.LogManager$LogNode: void walkAndSetParent(java.util.logging.Logger)>, java.util.logging.Logger, java.util.logging.LogManager$LogNode.walkAndSetParent/$r10, java.util.logging.LogManager$LogNode.walkAndSetParent/$r11
  <java.util.logging.LogManager$LogNode: void walkAndSetParent(java.util.logging.Logger)>, java.util.logging.LogManager$LogNode, java.util.logging.LogManager$LogNode.walkAndSetParent/r3, java.util.logging.LogManager$LogNode.walkAndSetParent/$r9
  <java.util.logging.LogManager: void drainLoggerRefQueueBounded()>, java.lang.ref.WeakReference, java.util.logging.LogManager.drainLoggerRefQueueBounded/r1, java.util.logging.LogManager.drainLoggerRefQueueBounded/$r5
  <java.util.logging.LogManager: void drainLoggerRefQueueBounded()>, java.util.logging.LogManager$LoggerWeakRef, java.util.logging.LogManager.drainLoggerRefQueueBounded/r2, java.util.logging.LogManager.drainLoggerRefQueueBounded/r1
  <java.util.logging.LogManager: void reset()>, java.lang.String, java.util.logging.LogManager.reset/r4, java.util.logging.LogManager.reset/$r13
  <java.util.logging.LogManager: void reset()>, java.util.logging.LogManager$LoggerContext, java.util.logging.LogManager.reset/r12, java.util.logging.LogManager.reset/$r11
  <java.util.logging.LogManager: void setLevelsOnExistingLoggers()>, java.lang.String, java.util.logging.LogManager.setLevelsOnExistingLoggers/r2, java.util.logging.LogManager.setLevelsOnExistingLoggers/$r9
  <java.util.logging.LogManager: void setLevelsOnExistingLoggers()>, java.util.logging.LogManager$LoggerContext, java.util.logging.LogManager.setLevelsOnExistingLoggers/r6, java.util.logging.LogManager.setLevelsOnExistingLoggers/$r16
  <java.util.logging.LogRecord: void <init>(java.util.logging.Level,java.lang.String)>, java.lang.Integer, java.util.logging.LogRecord.<init>/r4, java.util.logging.LogRecord.<init>/$r9
  <java.util.Properties: java.lang.String getProperty(java.lang.String)>, java.lang.String, <java.util.Properties: java.lang.String getProperty(java.lang.String)>/$r4, <java.util.Properties: java.lang.String getProperty(java.lang.String)>/r2
  <java.util.Properties: void enumerate(java.util.Hashtable)>, java.lang.String, java.util.Properties.enumerate/r3, java.util.Properties.enumerate/$r6
  <java.util.PropertyPermission: boolean equals(java.lang.Object)>, java.util.PropertyPermission, java.util.PropertyPermission.equals/r2, java.util.PropertyPermission.equals/r1
  <java.util.PropertyPermission: boolean implies(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermission.implies/r2, java.util.PropertyPermission.implies/r1
  <java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.implies/r18, java.util.PropertyPermissionCollection.implies/$r17
  <java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.implies/r27, java.util.PropertyPermissionCollection.implies/$r26
  <java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.implies/r2, java.util.PropertyPermissionCollection.implies/r1
  <java.util.PropertyPermissionCollection: boolean implies(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.implies/r4, java.util.PropertyPermissionCollection.implies/$r11
  <java.util.PropertyPermissionCollection: void add(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.add/r3, java.util.PropertyPermissionCollection.add/r1
  <java.util.PropertyPermissionCollection: void add(java.security.Permission)>, java.util.PropertyPermission, java.util.PropertyPermissionCollection.add/r6, java.util.PropertyPermissionCollection.add/$r16
  <java.util.regex.Pattern$BnM: java.util.regex.Pattern$Node optimize(java.util.regex.Pattern$Node)>, java.util.regex.Pattern$Slice, java.util.regex.Pattern$BnM.optimize/$r4, java.util.regex.Pattern$BnM.optimize/r0
  <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>, java.util.regex.Pattern$CharPropertyNames$CloneableProperty, <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>/$r3, <java.util.regex.Pattern$CharPropertyNames$CloneableProperty: java.util.regex.Pattern$CharPropertyNames$CloneableProperty clone()>/$r2
  <java.util.regex.Pattern$CharPropertyNames: java.util.regex.Pattern$CharProperty charPropertyFor(java.lang.String)>, java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory, java.util.regex.Pattern$CharPropertyNames.charPropertyFor/r2, java.util.regex.Pattern$CharPropertyNames.charPropertyFor/$r3
  <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>, java.lang.String, <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$r15, <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$r14
  <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>, java.lang.String[], <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$r18, <java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>/$r17
  <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty range(java.util.regex.Pattern$BitClass)>, java.util.regex.Pattern$CharProperty, java.util.regex.Pattern.range/$r5, java.util.regex.Pattern.range/$r4
  <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>, java.util.regex.Pattern$Branch, java.util.regex.Pattern.expr/$r8, java.util.regex.Pattern.expr/r2
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$Curly, java.util.regex.Pattern.group0/r37, java.util.regex.Pattern.group0/r30
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$GroupHead, java.util.regex.Pattern.group0/$r46, java.util.regex.Pattern.group0/r5
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$GroupTail, java.util.regex.Pattern.group0/r2, java.util.regex.Pattern.group0/r6
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$GroupTail, java.util.regex.Pattern.group0/$r42, java.util.regex.Pattern.group0/r6
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$GroupTail, java.util.regex.Pattern.group0/$r43, java.util.regex.Pattern.group0/r6
  <java.util.regex.Pattern: java.util.regex.Pattern$Node group0()>, java.util.regex.Pattern$Ques, java.util.regex.Pattern.group0/r31, java.util.regex.Pattern.group0/r30
  <java.util.regex.PatternSyntaxException: void <clinit>()>, java.lang.String, java.util.regex.PatternSyntaxException.<clinit>/$r2, java.util.regex.PatternSyntaxException.<clinit>/$r1
  <java.util.ResourceBundle: boolean beginLoading(java.util.ResourceBundle$CacheKey)>, java.lang.Thread, java.util.ResourceBundle.beginLoading/$r8, java.util.ResourceBundle.beginLoading/$r7
  <java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>, java.lang.ClassLoader, java.util.ResourceBundle$CacheKey.equals/r3, java.util.ResourceBundle$CacheKey.equals/$r11
  <java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>, java.util.ResourceBundle$CacheKey, java.util.ResourceBundle$CacheKey.equals/r2, java.util.ResourceBundle$CacheKey.equals/r1
  <java.util.ResourceBundle$CacheKey: java.lang.ClassLoader getLoader()>, java.lang.ClassLoader, java.util.ResourceBundle$CacheKey.getLoader/$r4, java.util.ResourceBundle$CacheKey.getLoader/$r3
  <java.util.ResourceBundle$CacheKey: java.lang.Object clone()>, java.lang.ClassLoader, java.util.ResourceBundle$CacheKey.clone/$r8, java.util.ResourceBundle$CacheKey.clone/$r7
  <java.util.ResourceBundle$CacheKey: java.lang.Object clone()>, java.util.ResourceBundle$CacheKey, java.util.ResourceBundle$CacheKey.clone/r1, java.util.ResourceBundle$CacheKey.clone/$r4
  <java.util.ResourceBundle$Control: boolean needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)>, java.net.JarURLConnection, java.util.ResourceBundle$Control.needsReload/$r12, java.util.ResourceBundle$Control.needsReload/r8
  <java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>, java.io.InputStream, java.util.ResourceBundle$Control.newBundle/r24, java.util.ResourceBundle$Control.newBundle/$r23
  <java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>, java.io.IOException, java.util.ResourceBundle$Control.newBundle/$r27, java.util.ResourceBundle$Control.newBundle/$r26
  <java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>, java.util.ResourceBundle, java.util.ResourceBundle$Control.newBundle/r6, java.util.ResourceBundle$Control.newBundle/$r12
  <java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>, java.lang.String[], java.util.ResourceBundle.getStringArray/$r3, java.util.ResourceBundle.getStringArray/$r2
  <java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>, java.lang.String[], java.util.ResourceBundle.getStringArray/$r4, java.util.ResourceBundle.getStringArray/$r3
  <java.util.ResourceBundle: java.lang.String getString(java.lang.String)>, java.lang.String, java.util.ResourceBundle.getString/$r3, java.util.ResourceBundle.getString/$r2
  <java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>, java.util.ResourceBundle$BundleReference, java.util.ResourceBundle.findBundleInCache/r3, java.util.ResourceBundle.findBundleInCache/$r10
  <java.util.ResourceBundle: java.util.ResourceBundle findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)>, java.util.ResourceBundle, java.util.ResourceBundle.findBundleInCache/r4, java.util.ResourceBundle.findBundleInCache/$r11
  <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>, java.util.Locale, java.util.ResourceBundle.findBundle/r5, java.util.ResourceBundle.findBundle/$r13
  <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>, java.util.ResourceBundle$BundleReference, java.util.ResourceBundle.findBundle/r40, java.util.ResourceBundle.findBundle/$r39
  <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>, java.util.ResourceBundle$BundleReference, java.util.ResourceBundle.findBundle/r9, java.util.ResourceBundle.findBundle/$r24
  <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>, java.util.ResourceBundle$CacheKey, java.util.ResourceBundle.findBundle/r29, java.util.ResourceBundle.findBundle/$r28
  <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>, java.util.ResourceBundle$CacheKeyReference, java.util.ResourceBundle.findBundle/$r18, java.util.ResourceBundle.findBundle/r7
  <java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>, java.util.ResourceBundle$BundleReference, java.util.ResourceBundle.getBundleImpl/r6, java.util.ResourceBundle.getBundleImpl/$r14
  <java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>, java.util.ResourceBundle, java.util.ResourceBundle.getBundleImpl/r5, java.util.ResourceBundle.getBundleImpl/$r15
  <java.util.ResourceBundle: java.util.ResourceBundle loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)>, java.lang.String, java.util.ResourceBundle.loadBundle/r5, java.util.ResourceBundle.loadBundle/$r11
  <java.util.ResourceBundle: java.util.ResourceBundle putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control)>, java.util.ResourceBundle$BundleReference, java.util.ResourceBundle.putBundleInCache/r6, java.util.ResourceBundle.putBundleInCache/$r11
  <java.util.ResourceBundle: java.util.ResourceBundle putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control)>, java.util.ResourceBundle$CacheKey, java.util.ResourceBundle.putBundleInCache/r3, java.util.ResourceBundle.putBundleInCache/$r8
  <java.util.ResourceBundle: java.util.ResourceBundle putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control)>, java.util.ResourceBundle, java.util.ResourceBundle.putBundleInCache/r7, java.util.ResourceBundle.putBundleInCache/$r12
  <java.util.ResourceBundle$RBClassLoader: void <clinit>()>, java.util.ResourceBundle$RBClassLoader, java.util.ResourceBundle$RBClassLoader.<clinit>/$r2, java.util.ResourceBundle$RBClassLoader.<clinit>/$r1
  <java.util.ServiceLoader$1: java.lang.Object next()>, java.util.Map$Entry, java.util.ServiceLoader$1.next/$r4, java.util.ServiceLoader$1.next/$r3
  <java.util.ServiceLoader$LazyIterator: boolean hasNext()>, java.lang.String, java.util.ServiceLoader$LazyIterator.hasNext/$r27, java.util.ServiceLoader$LazyIterator.hasNext/$r26
  <java.util.ServiceLoader$LazyIterator: boolean hasNext()>, java.net.URL, java.util.ServiceLoader$LazyIterator.hasNext/$r23, java.util.ServiceLoader$LazyIterator.hasNext/$r22
  <java.util.SimpleTimeZone: int getOffsets(long,int[])>, sun.util.calendar.BaseCalendar$Date, java.util.SimpleTimeZone.getOffsets/r11, java.util.SimpleTimeZone.getOffsets/$r10
  <java.util.SimpleTimeZone: int getOffsets(long,int[])>, sun.util.calendar.BaseCalendar, java.util.SimpleTimeZone.getOffsets/$r6, java.util.SimpleTimeZone.getOffsets/$r7
  <java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>, sun.util.calendar.BaseCalendar$Date, java.util.SimpleTimeZone.getTransition/r2, java.util.SimpleTimeZone.getTransition/$r11
  <java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>, sun.util.calendar.BaseCalendar$Date, java.util.SimpleTimeZone.getTransition/r2, java.util.SimpleTimeZone.getTransition/$r7
  <java.util.SimpleTimeZone: long getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)>, sun.util.calendar.BaseCalendar$Date, java.util.SimpleTimeZone.getTransition/r2, java.util.SimpleTimeZone.getTransition/$r9
  <java.util.TimeZone: java.lang.Object clone()>, java.util.TimeZone, java.util.TimeZone.clone/r1, java.util.TimeZone.clone/$r2
  <java.util.TimeZone: java.lang.String[] getDisplayNames(java.lang.String,java.util.Locale)>, java.lang.ref.SoftReference, java.util.TimeZone.getDisplayNames/r3, java.util.TimeZone.getDisplayNames/$r6
  <java.util.TimeZone: java.lang.String[] getDisplayNames(java.lang.String,java.util.Locale)>, java.lang.String[], java.util.TimeZone.getDisplayNames/r5, java.util.TimeZone.getDisplayNames/$r8
  <java.util.TimeZone: java.lang.String[] getDisplayNames(java.lang.String,java.util.Locale)>, java.util.Map, java.util.TimeZone.getDisplayNames/r4, java.util.TimeZone.getDisplayNames/$r7
  <java.util.TimeZone: java.util.TimeZone getDefaultInAppContext()>, java.util.TimeZone, java.util.TimeZone.getDefaultInAppContext/r1, java.util.TimeZone.getDefaultInAppContext/$r3
  <java.util.TimeZone: java.util.TimeZone getDefault()>, java.util.TimeZone, java.util.TimeZone.getDefault/$r2, java.util.TimeZone.getDefault/$r1
  <java.util.TimeZone: java.util.TimeZone setDefaultZone()>, java.lang.String, java.util.TimeZone.setDefaultZone/r0, java.util.TimeZone.setDefaultZone/$r5
  <java.util.TimeZone: java.util.TimeZone setDefaultZone()>, java.lang.String, java.util.TimeZone.setDefaultZone/r1, java.util.TimeZone.setDefaultZone/$r7
  <java.util.TimeZone: java.util.TimeZone setDefaultZone()>, java.lang.String, java.util.TimeZone.setDefaultZone/r2, java.util.TimeZone.setDefaultZone/$r9
  <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>, java.lang.Comparable, java.util.TreeMap.put/r7, java.util.TreeMap.put/r1
  <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>, java.util.Map$Entry, <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/r5, <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/$r9
  <java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>, java.lang.Comparable, java.util.TreeMap.getEntry/r2, java.util.TreeMap.getEntry/r1
  <java.util.TreeMap$KeySet: java.util.Iterator iterator()>, java.util.TreeMap, java.util.TreeMap$KeySet.iterator/$r3, java.util.TreeMap$KeySet.iterator/$r2
  <java.util.TreeMap$KeySet: java.util.Iterator iterator()>, java.util.TreeMap$NavigableSubMap, java.util.TreeMap$KeySet.iterator/$r6, java.util.TreeMap$KeySet.iterator/$r5
  <java.util.TreeSet: boolean addAll(java.util.Collection)>, java.util.SortedSet, java.util.TreeSet.addAll/r2, java.util.TreeSet.addAll/r1
  <java.util.TreeSet: boolean addAll(java.util.Collection)>, java.util.TreeMap, java.util.TreeSet.addAll/r3, java.util.TreeSet.addAll/$r9
  <java.util.TreeSet: java.lang.Object clone()>, java.util.TreeSet, java.util.TreeSet.clone/r3, java.util.TreeSet.clone/$r2
  <java.util.Vector: java.lang.Object clone()>, java.util.Vector, java.util.Vector.clone/r1, java.util.Vector.clone/$r2
  <java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>, java.lang.Object[], <java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>/$r5, <java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>/$r4
  <java.util.WeakHashMap: java.util.WeakHashMap$Entry[] newTable(int)>, java.util.WeakHashMap$Entry[], java.util.WeakHashMap.newTable/$r2, java.util.WeakHashMap.newTable/$r1
  <java.util.WeakHashMap: void expungeStaleEntries()>, java.util.WeakHashMap$Entry, java.util.WeakHashMap.expungeStaleEntries/r3, java.util.WeakHashMap.expungeStaleEntries/r1
  <java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>, java.util.zip.Inflater, java.util.zip.ZipFile.getInflater/r2, java.util.zip.ZipFile.getInflater/$r7
  <java.util.zip.ZipFile: void close()>, java.util.zip.Inflater, <java.util.zip.ZipFile: void close()>/r4, <java.util.zip.ZipFile: void close()>/$r10
  <java.util.zip.ZipInputStream: void readEnd(java.util.zip.ZipEntry)>, java.io.PushbackInputStream, java.util.zip.ZipInputStream.readEnd/$r11, java.util.zip.ZipInputStream.readEnd/$r10
  <java.util.zip.ZipInputStream: void readEnd(java.util.zip.ZipEntry)>, java.io.PushbackInputStream, java.util.zip.ZipInputStream.readEnd/$r4, java.util.zip.ZipInputStream.readEnd/$r3
  <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>, javax.crypto.CipherSpi, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/r8, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/$r13
  <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>, javax.crypto.Cipher$Transform, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/r6, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/$r11
  <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>, javax.crypto.NoSuchPaddingException, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/$r19, <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/r2
  <javax.crypto.Cipher: javax.crypto.Cipher$Transform getTransform(java.security.Provider$Service,java.util.List)>, javax.crypto.Cipher$Transform, javax.crypto.Cipher.getTransform/r5, javax.crypto.Cipher.getTransform/$r7
  <javax.crypto.Cipher$Transform: boolean matches(java.lang.String,java.lang.String)>, java.util.regex.Pattern, javax.crypto.Cipher$Transform.matches/r3, javax.crypto.Cipher$Transform.matches/$r4
  <javax.crypto.Cipher: void chooseFirstProvider()>, java.security.Provider$Service, javax.crypto.Cipher.chooseFirstProvider/r2, javax.crypto.Cipher.chooseFirstProvider/$r19
  <javax.crypto.Cipher: void chooseFirstProvider()>, javax.crypto.CipherSpi, javax.crypto.Cipher.chooseFirstProvider/r3, javax.crypto.Cipher.chooseFirstProvider/r5
  <javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>, java.lang.RuntimeException, javax.crypto.Cipher.chooseProvider/$r26, javax.crypto.Cipher.chooseProvider/r6
  <javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>, java.security.InvalidAlgorithmParameterException, javax.crypto.Cipher.chooseProvider/$r25, javax.crypto.Cipher.chooseProvider/r6
  <javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>, java.security.InvalidKeyException, javax.crypto.Cipher.chooseProvider/$r24, javax.crypto.Cipher.chooseProvider/r6
  <javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>, java.security.Provider$Service, javax.crypto.Cipher.chooseProvider/r7, javax.crypto.Cipher.chooseProvider/$r19
  <javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>, javax.crypto.CipherSpi, javax.crypto.Cipher.chooseProvider/r8, javax.crypto.Cipher.chooseProvider/$r21
  <javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>, javax.security.auth.x500.X500Principal, javax.security.auth.x500.X500Principal.equals/r2, javax.security.auth.x500.X500Principal.equals/r1
  <org.apache.lucene.analysis.standard.StandardTokenizer: org.apache.lucene.analysis.standard.ParseException generateParseException()>, int[], org.apache.lucene.analysis.standard.StandardTokenizer.generateParseException/$r15, org.apache.lucene.analysis.standard.StandardTokenizer.generateParseException/$r14
  <org.apache.lucene.document.Document: java.util.Enumeration fields()>, java.util.Vector, org.apache.lucene.document.Document.fields/$r2, org.apache.lucene.document.Document.fields/$r1
  <org.apache.lucene.document.Field: byte[] binaryValue()>, byte[], org.apache.lucene.document.Field.binaryValue/$r3, org.apache.lucene.document.Field.binaryValue/$r2
  <org.apache.lucene.document.Field: java.io.Reader readerValue()>, java.io.Reader, org.apache.lucene.document.Field.readerValue/$r3, org.apache.lucene.document.Field.readerValue/$r2
  <org.apache.lucene.document.Field: java.lang.String stringValue()>, java.lang.String, org.apache.lucene.document.Field.stringValue/$r3, org.apache.lucene.document.Field.stringValue/$r2
  <org.apache.lucene.index.CompoundFileWriter: void close()>, org.apache.lucene.index.CompoundFileWriter$FileEntry, org.apache.lucene.index.CompoundFileWriter.close/r23, org.apache.lucene.index.CompoundFileWriter.close/$r22
  <org.apache.lucene.index.CompoundFileWriter: void close()>, org.apache.lucene.index.CompoundFileWriter$FileEntry, org.apache.lucene.index.CompoundFileWriter.close/r3, org.apache.lucene.index.CompoundFileWriter.close/$r14
  <org.apache.lucene.index.CompoundFileWriter: void close()>, org.apache.lucene.index.CompoundFileWriter$FileEntry, org.apache.lucene.index.CompoundFileWriter.close/r4, org.apache.lucene.index.CompoundFileWriter.close/$r19
  <org.apache.lucene.index.DocumentWriter: org.apache.lucene.index.Posting[] sortPostingTable()>, org.apache.lucene.index.Posting, org.apache.lucene.index.DocumentWriter.sortPostingTable/$r6, org.apache.lucene.index.DocumentWriter.sortPostingTable/$r5
  <org.apache.lucene.index.DocumentWriter: void addPosition(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo)>, org.apache.lucene.index.Posting, org.apache.lucene.index.DocumentWriter.addPosition/r4, org.apache.lucene.index.DocumentWriter.addPosition/$r10
  <org.apache.lucene.index.DocumentWriter: void invertDocument(org.apache.lucene.document.Document)>, org.apache.lucene.document.Field, org.apache.lucene.index.DocumentWriter.invertDocument/r3, org.apache.lucene.index.DocumentWriter.invertDocument/$r11
  <org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)>, java.io.IOException, org.apache.lucene.index.DocumentWriter.writePostings/$r53, org.apache.lucene.index.DocumentWriter.writePostings/$r52
  <org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)>, java.io.IOException, org.apache.lucene.index.DocumentWriter.writePostings/$r64, org.apache.lucene.index.DocumentWriter.writePostings/$r63
  <org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)>, java.io.IOException, org.apache.lucene.index.DocumentWriter.writePostings/r70, org.apache.lucene.index.DocumentWriter.writePostings/r13
  <org.apache.lucene.index.DocumentWriter: void writePostings(org.apache.lucene.index.Posting[],java.lang.String)>, java.io.IOException, org.apache.lucene.index.DocumentWriter.writePostings/r71, org.apache.lucene.index.DocumentWriter.writePostings/r54
  <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>, org.apache.lucene.index.FieldInfo, <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>/$r4, <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>/$r3
  <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>, org.apache.lucene.index.FieldInfo, <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>/$r4, <org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>/$r3
  <org.apache.lucene.index.FieldInfos: void add(java.util.Collection,boolean)>, java.lang.String, <org.apache.lucene.index.FieldInfos: void add(java.util.Collection,boolean)>/$r4, <org.apache.lucene.index.FieldInfos: void add(java.util.Collection,boolean)>/$r3
  <org.apache.lucene.index.FieldInfos: void add(org.apache.lucene.document.Document)>, org.apache.lucene.document.Field, <org.apache.lucene.index.FieldInfos: void add(org.apache.lucene.document.Document)>/r3, <org.apache.lucene.index.FieldInfos: void add(org.apache.lucene.document.Document)>/$r4
  <org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)>, org.apache.lucene.document.Field, org.apache.lucene.index.FieldsWriter.addDocument/r10, org.apache.lucene.index.FieldsWriter.addDocument/$r9
  <org.apache.lucene.index.FieldsWriter: void addDocument(org.apache.lucene.document.Document)>, org.apache.lucene.document.Field, org.apache.lucene.index.FieldsWriter.addDocument/r3, org.apache.lucene.index.FieldsWriter.addDocument/$r6
  <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)>, java.lang.String, <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)>/r3, <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,java.util.Vector)>/$r5
  <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,org.apache.lucene.store.Directory)>, java.lang.String, <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,org.apache.lucene.store.Directory)>/$r4, <org.apache.lucene.index.IndexWriter: void deleteFiles(java.util.Vector,org.apache.lucene.store.Directory)>/$r3
  <org.apache.lucene.index.IndexWriter: void deleteSegments(java.util.Vector)>, org.apache.lucene.index.SegmentReader, org.apache.lucene.index.IndexWriter.deleteSegments/r4, org.apache.lucene.index.IndexWriter.deleteSegments/$r6
  <org.apache.lucene.index.IndexWriter: void writeDeleteableFiles(java.util.Vector)>, java.lang.String, org.apache.lucene.index.IndexWriter.writeDeleteableFiles/$r6, org.apache.lucene.index.IndexWriter.writeDeleteableFiles/$r5
  <org.apache.lucene.index.SegmentInfos: org.apache.lucene.index.SegmentInfo info(int)>, org.apache.lucene.index.SegmentInfo, org.apache.lucene.index.SegmentInfos.info/$r2, org.apache.lucene.index.SegmentInfos.info/$r1
  <org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMergeQueue.lessThan/r3, org.apache.lucene.index.SegmentMergeQueue.lessThan/r1
  <org.apache.lucene.index.SegmentMergeQueue: boolean lessThan(java.lang.Object,java.lang.Object)>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMergeQueue.lessThan/r4, org.apache.lucene.index.SegmentMergeQueue.lessThan/r2
  <org.apache.lucene.index.SegmentMergeQueue: void close()>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMergeQueue.close/$r3, org.apache.lucene.index.SegmentMergeQueue.close/$r2
  <org.apache.lucene.index.SegmentMerger: int mergeFields()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.mergeFields/r2, org.apache.lucene.index.SegmentMerger.mergeFields/$r8
  <org.apache.lucene.index.SegmentMerger: int mergeFields()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.mergeFields/r4, org.apache.lucene.index.SegmentMerger.mergeFields/$r40
  <org.apache.lucene.index.SegmentMerger: java.util.Vector createCompoundFile(java.lang.String)>, java.lang.String, org.apache.lucene.index.SegmentMerger.createCompoundFile/$r39, org.apache.lucene.index.SegmentMerger.createCompoundFile/$r38
  <org.apache.lucene.index.SegmentMerger: void addIndexed(org.apache.lucene.index.IndexReader,org.apache.lucene.index.FieldInfos,java.util.Collection,boolean,boolean,boolean)>, java.lang.String, org.apache.lucene.index.SegmentMerger.addIndexed/r5, org.apache.lucene.index.SegmentMerger.addIndexed/$r7
  <org.apache.lucene.index.SegmentMerger: void closeReaders()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.closeReaders/r1, org.apache.lucene.index.SegmentMerger.closeReaders/$r4
  <org.apache.lucene.index.SegmentMerger: void mergeNorms()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.mergeNorms/r3, org.apache.lucene.index.SegmentMerger.mergeNorms/$r17
  <org.apache.lucene.index.SegmentMerger: void mergeTermInfos()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.mergeTermInfos/r1, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r7
  <org.apache.lucene.index.SegmentMerger: void mergeTermInfos()>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r15, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r14
  <org.apache.lucene.index.SegmentMerger: void mergeTermInfos()>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMerger.mergeTermInfos/r20, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r19
  <org.apache.lucene.index.SegmentMerger: void mergeTermInfos()>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMerger.mergeTermInfos/r20, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r26
  <org.apache.lucene.index.SegmentMerger: void mergeTermInfos()>, org.apache.lucene.index.SegmentMergeInfo, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r24, org.apache.lucene.index.SegmentMerger.mergeTermInfos/$r23
  <org.apache.lucene.index.SegmentMerger: void mergeVectors()>, org.apache.lucene.index.IndexReader, org.apache.lucene.index.SegmentMerger.mergeVectors/r3, org.apache.lucene.index.SegmentMerger.mergeVectors/$r10
  <org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentReader get(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.SegmentInfos,boolean,boolean)>, org.apache.lucene.index.SegmentReader, <org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentReader get(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.SegmentInfos,boolean,boolean)>/r4, <org.apache.lucene.index.SegmentReader: org.apache.lucene.index.SegmentReader get(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.SegmentInfos,boolean,boolean)>/$r7
  <org.apache.lucene.index.Term: boolean equals(java.lang.Object)>, org.apache.lucene.index.Term, org.apache.lucene.index.Term.equals/r2, org.apache.lucene.index.Term.equals/r1
  <org.apache.lucene.index.TermVectorsWriter: void addAllDocVectors(org.apache.lucene.index.TermFreqVector[])>, org.apache.lucene.index.TermPositionVector, org.apache.lucene.index.TermVectorsWriter.addAllDocVectors/r2, org.apache.lucene.index.TermVectorsWriter.addAllDocVectors/$r4
  <org.apache.lucene.index.TermVectorsWriter: void close()>, java.io.IOException, org.apache.lucene.index.TermVectorsWriter.close/$r20, org.apache.lucene.index.TermVectorsWriter.close/$r19
  <org.apache.lucene.index.TermVectorsWriter: void close()>, java.io.IOException, org.apache.lucene.index.TermVectorsWriter.close/$r35, org.apache.lucene.index.TermVectorsWriter.close/$r34
  <org.apache.lucene.index.TermVectorsWriter: void close()>, java.io.IOException, org.apache.lucene.index.TermVectorsWriter.close/r36, org.apache.lucene.index.TermVectorsWriter.close/r2
  <org.apache.lucene.index.TermVectorsWriter: void close()>, java.io.IOException, org.apache.lucene.index.TermVectorsWriter.close/r37, org.apache.lucene.index.TermVectorsWriter.close/r21
  <org.apache.lucene.index.TermVectorsWriter: void writeDoc()>, org.apache.lucene.index.TermVectorsWriter$TVField, org.apache.lucene.index.TermVectorsWriter.writeDoc/r1, org.apache.lucene.index.TermVectorsWriter.writeDoc/$r8
  <org.apache.lucene.index.TermVectorsWriter: void writeDoc()>, org.apache.lucene.index.TermVectorsWriter$TVField, org.apache.lucene.index.TermVectorsWriter.writeDoc/r2, org.apache.lucene.index.TermVectorsWriter.writeDoc/$r11
  <org.apache.lucene.index.TermVectorsWriter: void writeField()>, org.apache.lucene.index.TermVectorsWriter$TVTerm, org.apache.lucene.index.TermVectorsWriter.writeField/r2, org.apache.lucene.index.TermVectorsWriter.writeField/$r11
  <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>, org.apache.lucene.store.FSDirectory, <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>/r3, <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>/$r11
  <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>, org.apache.lucene.store.FSDirectory, <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>/r3, <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory getDirectory(java.io.File,boolean)>/$r13
  <org.apache.lucene.store.RAMDirectory: boolean fileExists(java.lang.String)>, org.apache.lucene.store.RAMFile, org.apache.lucene.store.RAMDirectory.fileExists/r2, org.apache.lucene.store.RAMDirectory.fileExists/$r4
  <org.apache.lucene.store.RAMDirectory: java.lang.String[] list()>, java.lang.String, org.apache.lucene.store.RAMDirectory.list/$r6, org.apache.lucene.store.RAMDirectory.list/$r5
  <org.apache.lucene.store.RAMOutputStream: void flushBuffer(byte[],int)>, byte[], org.apache.lucene.store.RAMOutputStream.flushBuffer/r2, org.apache.lucene.store.RAMOutputStream.flushBuffer/$r9
  <org.apache.lucene.store.RAMOutputStream: void writeTo(org.apache.lucene.store.IndexOutput)>, byte[], org.apache.lucene.store.RAMOutputStream.writeTo/$r6, org.apache.lucene.store.RAMOutputStream.writeTo/$r5
  <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>, java.lang.String, <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>/$r3, <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>/r1
  <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>, java.lang.String, <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>/$r4, <sun.misc.ASCIICaseInsensitiveComparator: int compare(java.lang.Object,java.lang.Object)>/r2
  <sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>, java.io.FileNotFoundException, sun.misc.ExtensionDependency.checkExtensionAgainst/$r19, sun.misc.ExtensionDependency.checkExtensionAgainst/$r18
  <sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>, java.io.IOException, sun.misc.ExtensionDependency.checkExtensionAgainst/$r21, sun.misc.ExtensionDependency.checkExtensionAgainst/$r20
  <sun.misc.ExtensionDependency: boolean checkExtensionAgainst(java.lang.String,java.util.jar.Attributes,java.io.File)>, java.util.jar.Manifest, sun.misc.ExtensionDependency.checkExtensionAgainst/r5, sun.misc.ExtensionDependency.checkExtensionAgainst/$r15
  <sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>, java.util.Vector, sun.misc.ExtensionDependency.installExtension/r5, sun.misc.ExtensionDependency.installExtension/$r9
  <sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>, sun.misc.ExtensionInstallationProvider, sun.misc.ExtensionDependency.installExtension/r13, sun.misc.ExtensionDependency.installExtension/$r12
  <sun.misc.ExtensionDependency: boolean installExtension(sun.misc.ExtensionInfo,sun.misc.ExtensionInfo)>, sun.misc.Launcher$ExtClassLoader, sun.misc.ExtensionDependency.installExtension/r7, sun.misc.ExtensionDependency.installExtension/$r21
  <sun.misc.ExtensionDependency: java.io.File checkExtensionExists(java.lang.String)>, java.io.File, sun.misc.ExtensionDependency.checkExtensionExists/$r7, sun.misc.ExtensionDependency.checkExtensionExists/$r6
  <sun.misc.ExtensionDependency: java.io.File[] getExtDirs()>, java.lang.String, sun.misc.ExtensionDependency.getExtDirs/r1, sun.misc.ExtensionDependency.getExtDirs/$r5
  <sun.misc.ExtensionDependency: java.io.File[] getInstalledExtensions()>, java.io.File[], sun.misc.ExtensionDependency.getInstalledExtensions/$r3, sun.misc.ExtensionDependency.getInstalledExtensions/$r2
  <sun.misc.ExtensionDependency: java.io.File[] getInstalledExtensions()>, java.io.File[], sun.misc.ExtensionDependency.getInstalledExtensions/$r4, sun.misc.ExtensionDependency.getInstalledExtensions/$r3
  <sun.misc.ExtensionDependency: java.lang.Boolean addNewExtensionsToClassLoader(sun.misc.Launcher$ExtClassLoader)>, java.net.URL, sun.misc.ExtensionDependency.addNewExtensionsToClassLoader/r4, sun.misc.ExtensionDependency.addNewExtensionsToClassLoader/$r7
  <sun.misc.FloatingDecimal: java.lang.String toJavaFormatString()>, char[], sun.misc.FloatingDecimal.toJavaFormatString/r2, sun.misc.FloatingDecimal.toJavaFormatString/$r4
  <sun.misc.FloatingDecimal: java.lang.String toJavaFormatString()>, char[], sun.misc.FloatingDecimal.toJavaFormatString/$r4, sun.misc.FloatingDecimal.toJavaFormatString/$r3
  <sun.misc.FloatingDecimal: void appendTo(java.lang.Appendable)>, char[], sun.misc.FloatingDecimal.appendTo/r3, sun.misc.FloatingDecimal.appendTo/$r5
  <sun.misc.FloatingDecimal: void appendTo(java.lang.Appendable)>, char[], sun.misc.FloatingDecimal.appendTo/$r5, sun.misc.FloatingDecimal.appendTo/$r4
  <sun.misc.FloatingDecimal: void appendTo(java.lang.Appendable)>, java.lang.StringBuffer, sun.misc.FloatingDecimal.appendTo/$r8, sun.misc.FloatingDecimal.appendTo/r1
  <sun.misc.FloatingDecimal: void appendTo(java.lang.Appendable)>, java.lang.StringBuilder, sun.misc.FloatingDecimal.appendTo/$r6, sun.misc.FloatingDecimal.appendTo/r1
  <sun.misc.FloatingDecimal: void developLongDigits(int,long,long)>, char[], sun.misc.FloatingDecimal.developLongDigits/r1, sun.misc.FloatingDecimal.developLongDigits/$r6
  <sun.misc.FloatingDecimal: void developLongDigits(int,long,long)>, char[], sun.misc.FloatingDecimal.developLongDigits/r1, sun.misc.FloatingDecimal.developLongDigits/$r9
  <sun.misc.FloatingDecimal: void developLongDigits(int,long,long)>, char[], sun.misc.FloatingDecimal.developLongDigits/$r6, sun.misc.FloatingDecimal.developLongDigits/$r5
  <sun.misc.FloatingDecimal: void developLongDigits(int,long,long)>, char[], sun.misc.FloatingDecimal.developLongDigits/$r9, sun.misc.FloatingDecimal.developLongDigits/$r8
  <sun.misc.JarIndex: java.util.LinkedList get(java.lang.String)>, java.util.LinkedList, sun.misc.JarIndex.get/$r4, sun.misc.JarIndex.get/$r3
  <sun.misc.JarIndex: java.util.LinkedList get(java.lang.String)>, java.util.LinkedList, sun.misc.JarIndex.get/r5, sun.misc.JarIndex.get/$r8
  <sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>, java.util.LinkedList, sun.misc.JarIndex.addToList/r4, sun.misc.JarIndex.addToList/$r5
  <sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>, java.lang.String, sun.misc.JarIndex.merge/r5, sun.misc.JarIndex.merge/$r12
  <sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>, java.lang.String, sun.misc.JarIndex.merge/r8, sun.misc.JarIndex.merge/$r14
  <sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>, java.util.LinkedList, sun.misc.JarIndex.merge/r6, sun.misc.JarIndex.merge/$r13
  <sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>, java.util.Map$Entry, sun.misc.JarIndex.merge/r4, sun.misc.JarIndex.merge/$r11
  <sun.misc.JarIndex: void read(java.io.InputStream)>, java.lang.String[], sun.misc.JarIndex.read/$r15, sun.misc.JarIndex.read/$r14
  <sun.misc.JarIndex: void read(java.io.InputStream)>, java.lang.String[], sun.misc.JarIndex.read/$r16, sun.misc.JarIndex.read/$r15
  <sun.misc.Launcher$AppClassLoader: java.lang.ClassLoader getAppClassLoader(java.lang.ClassLoader)>, sun.misc.Launcher$AppClassLoader, sun.misc.Launcher$AppClassLoader.getAppClassLoader/$r6, sun.misc.Launcher$AppClassLoader.getAppClassLoader/$r5
  <sun.misc.Launcher$ExtClassLoader: sun.misc.Launcher$ExtClassLoader getExtClassLoader()>, java.io.IOException, sun.misc.Launcher$ExtClassLoader.getExtClassLoader/$r7, sun.misc.Launcher$ExtClassLoader.getExtClassLoader/$r6
  <sun.misc.Launcher$ExtClassLoader: sun.misc.Launcher$ExtClassLoader getExtClassLoader()>, sun.misc.Launcher$ExtClassLoader, sun.misc.Launcher$ExtClassLoader.getExtClassLoader/$r4, sun.misc.Launcher$ExtClassLoader.getExtClassLoader/$r3
  <sun.misc.Launcher$Factory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>, java.net.URLStreamHandler, sun.misc.Launcher$Factory.createURLStreamHandler/$r12, sun.misc.Launcher$Factory.createURLStreamHandler/$r11
  <sun.misc.Launcher: sun.misc.URLClassPath getBootstrapClassPath()>, java.lang.String, sun.misc.Launcher.getBootstrapClassPath/r1, sun.misc.Launcher.getBootstrapClassPath/$r5
  <sun.misc.Launcher: sun.misc.URLClassPath getBootstrapClassPath()>, java.net.URL[], sun.misc.Launcher.getBootstrapClassPath/r3, sun.misc.Launcher.getBootstrapClassPath/$r8
  <sun.misc.Launcher: sun.misc.URLClassPath getBootstrapClassPath()>, java.net.URL[], sun.misc.Launcher.getBootstrapClassPath/$r8, sun.misc.Launcher.getBootstrapClassPath/$r7
  <sun.misc.Launcher: void <init>()>, java.lang.SecurityManager, sun.misc.Launcher.<init>/r3, sun.misc.Launcher.<init>/$r19
  <sun.misc.MetaIndex: sun.misc.MetaIndex forJar(java.io.File)>, sun.misc.MetaIndex, sun.misc.MetaIndex.forJar/$r3, sun.misc.MetaIndex.forJar/$r2
  <sun.misc.MetaIndex: void <init>(java.util.List,boolean)>, java.lang.String[], sun.misc.MetaIndex.<init>/$r5, sun.misc.MetaIndex.<init>/$r4
  <sun.misc.Resource: java.nio.ByteBuffer getByteBuffer()>, sun.nio.ByteBuffered, sun.misc.Resource.getByteBuffer/$r2, sun.misc.Resource.getByteBuffer/r1
  <sun.misc.Service$LazyIterator: boolean hasNext()>, java.lang.String, sun.misc.Service$LazyIterator.hasNext/$r31, sun.misc.Service$LazyIterator.hasNext/$r30
  <sun.misc.Service$LazyIterator: boolean hasNext()>, java.net.URL, sun.misc.Service$LazyIterator.hasNext/$r26, sun.misc.Service$LazyIterator.hasNext/$r25
  <sun.misc.Signal: boolean equals(java.lang.Object)>, sun.misc.Signal, sun.misc.Signal.equals/r2, sun.misc.Signal.equals/r1
  <sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>, sun.misc.NativeSignalHandler, sun.misc.Signal.handle/$r5, sun.misc.Signal.handle/r1
  <sun.misc.Signal: sun.misc.SignalHandler handle(sun.misc.Signal,sun.misc.SignalHandler)>, sun.misc.SignalHandler, sun.misc.Signal.handle/r3, sun.misc.Signal.handle/$r16
  <sun.misc.SoftCache$ValueCell: java.lang.Object strip(java.lang.Object,boolean)>, sun.misc.SoftCache$ValueCell, sun.misc.SoftCache$ValueCell.strip/r1, sun.misc.SoftCache$ValueCell.strip/r0
  <sun.misc.SoftCache: void processQueue()>, sun.misc.SoftCache$ValueCell, sun.misc.SoftCache.processQueue/$r4, sun.misc.SoftCache.processQueue/$r3
  <sun.misc.URLClassPath$JarLoader: boolean validIndex(java.lang.String)>, java.util.zip.ZipEntry, sun.misc.URLClassPath$JarLoader.validIndex/r4, sun.misc.URLClassPath$JarLoader.validIndex/$r7
  <sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>, java.net.JarURLConnection, <sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/$r13, <sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/r11
  <sun.misc.URLClassPath$JarLoader: sun.misc.JarIndex getIndex()>, java.lang.InternalError, sun.misc.URLClassPath$JarLoader.getIndex/$r5, sun.misc.URLClassPath$JarLoader.getIndex/$r4
  <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean)>, java.lang.InternalError, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean)>/$r9, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean)>/$r8
  <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>, java.lang.InternalError, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r33, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r32
  <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>, java.lang.String, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/r4, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r12
  <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>, sun.misc.URLClassPath$JarLoader, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r17, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r16
  <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>, sun.misc.URLClassPath$JarLoader, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/r6, <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/$r19
  <sun.misc.URLClassPath$JarLoader: void ensureOpen()>, java.io.IOException, sun.misc.URLClassPath$JarLoader.ensureOpen/$r7, sun.misc.URLClassPath$JarLoader.ensureOpen/$r6
  <sun.misc.URLClassPath: java.net.URL[] getURLs()>, java.net.URL[], sun.misc.URLClassPath.getURLs/$r8, sun.misc.URLClassPath.getURLs/$r7
  <sun.misc.URLClassPath: java.net.URL[] getURLs()>, java.net.URL[], sun.misc.URLClassPath.getURLs/$r9, sun.misc.URLClassPath.getURLs/$r8
  <sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>, java.net.HttpURLConnection, sun.misc.URLClassPath$Loader.findResource/r5, sun.misc.URLClassPath$Loader.findResource/r10
  <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>, java.net.URL, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/r2, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$r8
  <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>, sun.misc.URLClassPath$Loader, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$r20, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(int)>/$r19
  <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>, java.io.IOException, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>/$r8, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>/$r7
  <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>, sun.misc.URLClassPath$Loader, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>/$r5, <sun.misc.URLClassPath: sun.misc.URLClassPath$Loader getLoader(java.net.URL)>/$r4
  <sun.misc.URLClassPath: void check(java.net.URL)>, java.net.JarURLConnection, sun.misc.URLClassPath.check/$r10, sun.misc.URLClassPath.check/r2
  <sun.misc.URLClassPath: void <clinit>()>, java.lang.String, sun.misc.URLClassPath.<clinit>/r1, sun.misc.URLClassPath.<clinit>/$r7
  <sun.misc.URLClassPath: void <clinit>()>, java.lang.String, sun.misc.URLClassPath.<clinit>/$r3, sun.misc.URLClassPath.<clinit>/$r2
  <sun.misc.VM: long maxDirectMemory()>, java.lang.String, sun.misc.VM.maxDirectMemory/r1, sun.misc.VM.maxDirectMemory/$r2
  <sun.net.InetAddressCachePolicy: void <clinit>()>, java.lang.Integer, sun.net.InetAddressCachePolicy.<clinit>/r0, sun.net.InetAddressCachePolicy.<clinit>/$r8
  <sun.net.InetAddressCachePolicy: void <clinit>()>, java.lang.Integer, sun.net.InetAddressCachePolicy.<clinit>/r17, sun.net.InetAddressCachePolicy.<clinit>/$r16
  <sun.net.InetAddressCachePolicy: void <clinit>()>, java.lang.String, sun.net.InetAddressCachePolicy.<clinit>/$r12, sun.net.InetAddressCachePolicy.<clinit>/$r11
  <sun.net.InetAddressCachePolicy: void <clinit>()>, java.lang.String, sun.net.InetAddressCachePolicy.<clinit>/$r5, sun.net.InetAddressCachePolicy.<clinit>/$r4
  <sun.nio.cs.FastCharsetProvider: java.lang.String canonicalize(java.lang.String)>, java.lang.String, sun.nio.cs.FastCharsetProvider.canonicalize/r2, sun.nio.cs.FastCharsetProvider.canonicalize/$r4
  <sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset lookup(java.lang.String)>, java.lang.String, sun.nio.cs.FastCharsetProvider.lookup/r4, sun.nio.cs.FastCharsetProvider.lookup/$r10
  <sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset lookup(java.lang.String)>, java.nio.charset.Charset, sun.nio.cs.FastCharsetProvider.lookup/r24, sun.nio.cs.FastCharsetProvider.lookup/$r23
  <sun.nio.cs.FastCharsetProvider: java.nio.charset.Charset lookup(java.lang.String)>, java.nio.charset.Charset, sun.nio.cs.FastCharsetProvider.lookup/r3, sun.nio.cs.FastCharsetProvider.lookup/$r8
  <sun.nio.cs.ThreadLocalCoders$1: boolean hasName(java.lang.Object,java.lang.Object)>, java.nio.charset.CharsetDecoder, sun.nio.cs.ThreadLocalCoders$1.hasName/$r3, sun.nio.cs.ThreadLocalCoders$1.hasName/r1
  <sun.nio.cs.ThreadLocalCoders$1: boolean hasName(java.lang.Object,java.lang.Object)>, java.nio.charset.CharsetDecoder, sun.nio.cs.ThreadLocalCoders$1.hasName/$r6, sun.nio.cs.ThreadLocalCoders$1.hasName/r1
  <sun.nio.cs.ThreadLocalCoders$1: java.lang.Object create(java.lang.Object)>, java.lang.String, sun.nio.cs.ThreadLocalCoders$1.create/$r2, sun.nio.cs.ThreadLocalCoders$1.create/r1
  <sun.nio.cs.ThreadLocalCoders$1: java.lang.Object create(java.lang.Object)>, java.nio.charset.Charset, sun.nio.cs.ThreadLocalCoders$1.create/$r5, sun.nio.cs.ThreadLocalCoders$1.create/r1
  <sun.nio.cs.ThreadLocalCoders$2: boolean hasName(java.lang.Object,java.lang.Object)>, java.nio.charset.CharsetEncoder, sun.nio.cs.ThreadLocalCoders$2.hasName/$r3, sun.nio.cs.ThreadLocalCoders$2.hasName/r1
  <sun.nio.cs.ThreadLocalCoders$2: boolean hasName(java.lang.Object,java.lang.Object)>, java.nio.charset.CharsetEncoder, sun.nio.cs.ThreadLocalCoders$2.hasName/$r6, sun.nio.cs.ThreadLocalCoders$2.hasName/r1
  <sun.nio.cs.ThreadLocalCoders$2: java.lang.Object create(java.lang.Object)>, java.lang.String, sun.nio.cs.ThreadLocalCoders$2.create/$r2, sun.nio.cs.ThreadLocalCoders$2.create/r1
  <sun.nio.cs.ThreadLocalCoders$2: java.lang.Object create(java.lang.Object)>, java.nio.charset.Charset, sun.nio.cs.ThreadLocalCoders$2.create/$r5, sun.nio.cs.ThreadLocalCoders$2.create/r1
  <sun.nio.cs.ThreadLocalCoders$Cache: java.lang.Object forName(java.lang.Object)>, java.lang.Object[], sun.nio.cs.ThreadLocalCoders$Cache.forName/r2, sun.nio.cs.ThreadLocalCoders$Cache.forName/$r6
  <sun.nio.cs.ThreadLocalCoders$Cache: java.lang.Object forName(java.lang.Object)>, java.lang.Object[], sun.nio.cs.ThreadLocalCoders$Cache.forName/$r6, sun.nio.cs.ThreadLocalCoders$Cache.forName/$r5
  <sun.nio.cs.ThreadLocalCoders: java.nio.charset.CharsetDecoder decoderFor(java.lang.Object)>, java.nio.charset.CharsetDecoder, sun.nio.cs.ThreadLocalCoders.decoderFor/r2, sun.nio.cs.ThreadLocalCoders.decoderFor/$r3
  <sun.nio.cs.ThreadLocalCoders: java.nio.charset.CharsetEncoder encoderFor(java.lang.Object)>, java.nio.charset.CharsetEncoder, sun.nio.cs.ThreadLocalCoders.encoderFor/r2, sun.nio.cs.ThreadLocalCoders.encoderFor/$r3
  <sun.reflect.ClassDefiner: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.lang.ClassLoader)>, java.lang.ClassLoader, sun.reflect.ClassDefiner.defineClass/r4, sun.reflect.ClassDefiner.defineClass/$r5
  <sun.reflect.Label: void bind()>, sun.reflect.Label$PatchInfo, sun.reflect.Label.bind/r2, sun.reflect.Label.bind/$r4
  <sun.reflect.MethodAccessorGenerator$1: java.lang.Object run()>, java.lang.InternalError, sun.reflect.MethodAccessorGenerator$1.run/$r12, sun.reflect.MethodAccessorGenerator$1.run/$r11
  <sun.reflect.MethodAccessorGenerator$1: java.lang.Object run()>, java.lang.InternalError, sun.reflect.MethodAccessorGenerator$1.run/$r17, sun.reflect.MethodAccessorGenerator$1.run/$r16
  <sun.reflect.MethodAccessorGenerator: sun.reflect.ConstructorAccessor generateConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int)>, sun.reflect.ConstructorAccessor, sun.reflect.MethodAccessorGenerator.generateConstructor/$r6, sun.reflect.MethodAccessorGenerator.generateConstructor/$r5
  <sun.reflect.MethodAccessorGenerator: sun.reflect.MagicAccessorImpl generate(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],int,boolean,boolean,java.lang.Class)>, sun.reflect.MagicAccessorImpl, sun.reflect.MethodAccessorGenerator.generate/$r77, sun.reflect.MethodAccessorGenerator.generate/$r76
  <sun.reflect.NativeConstructorAccessorImpl: java.lang.Object newInstance(java.lang.Object[])>, sun.reflect.ConstructorAccessorImpl, sun.reflect.NativeConstructorAccessorImpl.newInstance/r3, sun.reflect.NativeConstructorAccessorImpl.newInstance/$r12
  <sun.reflect.ReflectionFactory$1: java.lang.Object run()>, java.lang.RuntimeException, sun.reflect.ReflectionFactory$1.run/$r8, sun.reflect.ReflectionFactory$1.run/$r7
  <sun.reflect.Reflection: java.lang.reflect.Field[] filterFields(java.lang.Class,java.lang.reflect.Field[])>, java.lang.reflect.Field[], sun.reflect.Reflection.filterFields/$r7, sun.reflect.Reflection.filterFields/$r6
  <sun.reflect.Reflection: java.lang.reflect.Field[] filterFields(java.lang.Class,java.lang.reflect.Field[])>, java.lang.reflect.Field[], sun.reflect.Reflection.filterFields/$r8, sun.reflect.Reflection.filterFields/$r7
  <sun.reflect.Reflection: java.lang.reflect.Field[] filterFields(java.lang.Class,java.lang.reflect.Field[])>, java.lang.String[], sun.reflect.Reflection.filterFields/$r5, sun.reflect.Reflection.filterFields/$r4
  <sun.reflect.Reflection: java.lang.reflect.Member[] filter(java.lang.reflect.Member[],java.lang.String[])>, java.lang.reflect.Member[], sun.reflect.Reflection.filter/$r11, sun.reflect.Reflection.filter/$r10
  <sun.reflect.Reflection: java.lang.reflect.Member[] filter(java.lang.reflect.Member[],java.lang.String[])>, java.lang.reflect.Member[], sun.reflect.Reflection.filter/r12, sun.reflect.Reflection.filter/$r11
  <sun.reflect.Reflection: java.lang.reflect.Method[] filterMethods(java.lang.Class,java.lang.reflect.Method[])>, java.lang.reflect.Method[], sun.reflect.Reflection.filterMethods/$r7, sun.reflect.Reflection.filterMethods/$r6
  <sun.reflect.Reflection: java.lang.reflect.Method[] filterMethods(java.lang.Class,java.lang.reflect.Method[])>, java.lang.reflect.Method[], sun.reflect.Reflection.filterMethods/$r8, sun.reflect.Reflection.filterMethods/$r7
  <sun.reflect.Reflection: java.lang.reflect.Method[] filterMethods(java.lang.Class,java.lang.reflect.Method[])>, java.lang.String[], sun.reflect.Reflection.filterMethods/$r5, sun.reflect.Reflection.filterMethods/$r4
  <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>, java.security.Provider$Service, <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/r7, <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>/$r20
  <sun.security.jca.ProviderConfig$3: java.security.Provider run()>, java.lang.reflect.InvocationTargetException, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/$r39, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/r38
  <sun.security.jca.ProviderConfig$3: java.security.Provider run()>, java.security.ProviderException, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/$r48, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/r40
  <sun.security.jca.ProviderConfig$3: java.security.Provider run()>, java.security.Provider, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/$r27, <sun.security.jca.ProviderConfig$3: java.security.Provider run()>/r5
  <sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>, sun.security.jca.ProviderConfig, sun.security.jca.ProviderConfig.equals/r2, sun.security.jca.ProviderConfig.equals/r1
  <sun.security.jca.ProviderConfig: java.lang.String expand(java.lang.String)>, java.lang.String, sun.security.jca.ProviderConfig.expand/$r3, sun.security.jca.ProviderConfig.expand/$r2
  <sun.security.jca.ProviderConfig: java.security.Provider doLoadProvider()>, java.security.Provider, sun.security.jca.ProviderConfig.doLoadProvider/$r3, sun.security.jca.ProviderConfig.doLoadProvider/$r2
  <sun.security.jca.ProviderConfig: void checkSunPKCS11Solaris()>, java.lang.Boolean, sun.security.jca.ProviderConfig.checkSunPKCS11Solaris/r2, sun.security.jca.ProviderConfig.checkSunPKCS11Solaris/$r3
  <sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>, java.security.Provider$Service, sun.security.jca.ProviderList$ServiceList.tryGet/$r11, sun.security.jca.ProviderList$ServiceList.tryGet/$r10
  <sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>, sun.security.jca.ServiceId, sun.security.jca.ProviderList$ServiceList.tryGet/r3, sun.security.jca.ProviderList$ServiceList.tryGet/$r21
  <sun.security.jca.ProviderList: sun.security.jca.ProviderList fromSecurityProperties()>, sun.security.jca.ProviderList, sun.security.jca.ProviderList.fromSecurityProperties/$r2, sun.security.jca.ProviderList.fromSecurityProperties/$r1
  <sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>, sun.security.jca.ProviderConfig[], sun.security.jca.ProviderList.getJarList/r12, sun.security.jca.ProviderList.getJarList/$r11
  <sun.security.jca.ProviderList: void <init>()>, sun.security.jca.ProviderConfig[], <sun.security.jca.ProviderList: void <init>()>/$r23, <sun.security.jca.ProviderList: void <init>()>/$r22
  <sun.security.jca.Providers: java.security.Provider getSunProvider()>, java.security.Provider, sun.security.jca.Providers.getSunProvider/$r5, sun.security.jca.Providers.getSunProvider/$r4
  <sun.security.jca.Providers: java.security.Provider getSunProvider()>, java.security.Provider, sun.security.jca.Providers.getSunProvider/$r9, sun.security.jca.Providers.getSunProvider/$r8
  <sun.security.jca.Providers: sun.security.jca.ProviderList beginThreadProviderList(sun.security.jca.ProviderList)>, sun.security.jca.ProviderList, sun.security.jca.Providers.beginThreadProviderList/r3, sun.security.jca.Providers.beginThreadProviderList/$r9
  <sun.security.jca.Providers: sun.security.jca.ProviderList getThreadProviderList()>, sun.security.jca.ProviderList, sun.security.jca.Providers.getThreadProviderList/$r2, sun.security.jca.Providers.getThreadProviderList/$r1
  <sun.security.jca.Providers: void stopJarVerification(java.lang.Object)>, sun.security.jca.ProviderList, sun.security.jca.Providers.stopJarVerification/$r1, sun.security.jca.Providers.stopJarVerification/r0
  <sun.security.pkcs.PKCS7: java.security.cert.X509Certificate[] getCertificates()>, java.security.cert.X509Certificate[], sun.security.pkcs.PKCS7.getCertificates/$r4, sun.security.pkcs.PKCS7.getCertificates/$r3
  <sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>, java.security.cert.X509Certificate, sun.security.pkcs.PKCS7.parseNetscapeCertChain/$r21, sun.security.pkcs.PKCS7.parseNetscapeCertChain/$r20
  <sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>, java.security.cert.X509Certificate, sun.security.pkcs.PKCS7.parseOldSignedData/$r29, sun.security.pkcs.PKCS7.parseOldSignedData/$r28
  <sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>, java.security.cert.X509Certificate, sun.security.pkcs.PKCS7.parseSignedData/$r37, sun.security.pkcs.PKCS7.parseSignedData/$r36
  <sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>, java.security.cert.X509CRL, sun.security.pkcs.PKCS7.parseSignedData/$r61, sun.security.pkcs.PKCS7.parseSignedData/$r60
  <sun.security.pkcs.PKCS7: void populateCertIssuerNames()>, java.security.Principal, sun.security.pkcs.PKCS7.populateCertIssuerNames/r2, sun.security.pkcs.PKCS7.populateCertIssuerNames/$r11
  <sun.security.pkcs.PKCS9Attribute: java.lang.String getName()>, java.lang.String, <sun.security.pkcs.PKCS9Attribute: java.lang.String getName()>/$r5, <sun.security.pkcs.PKCS9Attribute: java.lang.String getName()>/$r4
  <sun.security.pkcs.PKCS9Attributes: byte[] getDerEncoding()>, byte[], sun.security.pkcs.PKCS9Attributes.getDerEncoding/$r3, sun.security.pkcs.PKCS9Attributes.getDerEncoding/$r2
  <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(java.lang.String)>, sun.security.pkcs.PKCS9Attribute, <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(java.lang.String)>/$r5, <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(java.lang.String)>/$r4
  <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(sun.security.util.ObjectIdentifier)>, sun.security.pkcs.PKCS9Attribute, <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(sun.security.util.ObjectIdentifier)>/$r4, <sun.security.pkcs.PKCS9Attributes: sun.security.pkcs.PKCS9Attribute getAttribute(sun.security.util.ObjectIdentifier)>/$r3
  <sun.security.pkcs.PKCS9Attributes: sun.security.util.DerEncoder[] castToDerEncoder(java.lang.Object[])>, sun.security.util.DerEncoder, sun.security.pkcs.PKCS9Attributes.castToDerEncoder/$r3, sun.security.pkcs.PKCS9Attributes.castToDerEncoder/$r2
  <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier getOID(java.lang.String)>, sun.security.util.ObjectIdentifier, <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier getOID(java.lang.String)>/$r4, <sun.security.pkcs.PKCS9Attribute: sun.security.util.ObjectIdentifier getOID(java.lang.String)>/$r3
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, byte[], sun.security.pkcs.PKCS9Attribute.derEncode/$r20, sun.security.pkcs.PKCS9Attribute.derEncode/$r19
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, byte[], sun.security.pkcs.PKCS9Attribute.derEncode/$r21, sun.security.pkcs.PKCS9Attribute.derEncode/$r20
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, byte[], sun.security.pkcs.PKCS9Attribute.derEncode/$r59, sun.security.pkcs.PKCS9Attribute.derEncode/$r58
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, byte[], sun.security.pkcs.PKCS9Attribute.derEncode/$r60, sun.security.pkcs.PKCS9Attribute.derEncode/$r59
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.lang.String, sun.security.pkcs.PKCS9Attribute.derEncode/$r34, sun.security.pkcs.PKCS9Attribute.derEncode/$r33
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.lang.String[], sun.security.pkcs.PKCS9Attribute.derEncode/$r37, sun.security.pkcs.PKCS9Attribute.derEncode/$r36
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.lang.String[], sun.security.pkcs.PKCS9Attribute.derEncode/r38, sun.security.pkcs.PKCS9Attribute.derEncode/$r37
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.lang.String[], sun.security.pkcs.PKCS9Attribute.derEncode/r4, sun.security.pkcs.PKCS9Attribute.derEncode/$r9
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.lang.String[], sun.security.pkcs.PKCS9Attribute.derEncode/$r9, sun.security.pkcs.PKCS9Attribute.derEncode/$r8
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, java.util.Date, sun.security.pkcs.PKCS9Attribute.derEncode/$r26, sun.security.pkcs.PKCS9Attribute.derEncode/$r25
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, sun.security.util.DerEncoder[], sun.security.pkcs.PKCS9Attribute.derEncode/$r29, sun.security.pkcs.PKCS9Attribute.derEncode/$r28
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, sun.security.util.DerEncoder[], sun.security.pkcs.PKCS9Attribute.derEncode/$r30, sun.security.pkcs.PKCS9Attribute.derEncode/$r29
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, sun.security.util.ObjectIdentifier, sun.security.pkcs.PKCS9Attribute.derEncode/$r15, sun.security.pkcs.PKCS9Attribute.derEncode/$r14
  <sun.security.pkcs.PKCS9Attribute: void derEncode(java.io.OutputStream)>, sun.security.x509.CertificateExtensions, sun.security.pkcs.PKCS9Attribute.derEncode/r50, sun.security.pkcs.PKCS9Attribute.derEncode/$r49
  <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>, byte[], <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r21, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r20
  <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>, byte[], <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/r7, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r21
  <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>, java.lang.Boolean, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r38, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r37
  <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>, java.lang.Boolean, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r40, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r39
  <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>, sun.security.util.ObjectIdentifier, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/r6, <sun.security.pkcs.SignerInfo: sun.security.pkcs.SignerInfo verify(sun.security.pkcs.PKCS7,byte[])>/$r16
  <sun.security.provider.PolicyFile: boolean checkForTrustedIdentity(java.security.cert.Certificate,sun.security.provider.PolicyFile$PolicyInfo)>, java.security.Identity, sun.security.provider.PolicyFile.checkForTrustedIdentity/r12, sun.security.provider.PolicyFile.checkForTrustedIdentity/$r11
  <sun.security.provider.PolicyFile: boolean implies(java.security.ProtectionDomain,java.security.Permission)>, sun.security.provider.PolicyFile$PolicyInfo, sun.security.provider.PolicyFile.implies/r3, sun.security.provider.PolicyFile.implies/$r7
  <sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>, sun.security.provider.PolicyParser$GrantEntry, <sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>/r8, <sun.security.provider.PolicyFile: boolean init(java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)>/$r23
  <sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>, java.lang.Boolean, <sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/r5, <sun.security.provider.PolicyFile: boolean initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/$r6
  <sun.security.provider.PolicyFile: boolean isTrusted(java.security.Identity)>, sun.security.provider.SystemIdentity, sun.security.provider.PolicyFile.isTrusted/r1, sun.security.provider.PolicyFile.isTrusted/r0
  <sun.security.provider.PolicyFile: boolean isTrusted(java.security.Identity)>, sun.security.provider.SystemSigner, sun.security.provider.PolicyFile.isTrusted/r2, sun.security.provider.PolicyFile.isTrusted/r0
  <sun.security.provider.PolicyFile: boolean replacePrincipals(java.util.List,java.security.KeyStore)>, sun.security.provider.PolicyParser$PrincipalEntry, sun.security.provider.PolicyFile.replacePrincipals/r4, sun.security.provider.PolicyFile.replacePrincipals/$r6
  <sun.security.provider.PolicyFile: java.lang.String getDN(java.lang.String,java.security.KeyStore)>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile.getDN/r23, sun.security.provider.PolicyFile.getDN/r5
  <sun.security.provider.PolicyFile: java.lang.String[][] getPrincipalInfo(sun.security.provider.PolicyParser$PrincipalEntry,java.security.Principal[])>, java.security.Principal, sun.security.provider.PolicyFile.getPrincipalInfo/r5, sun.security.provider.PolicyFile.getPrincipalInfo/$r22
  <sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>, java.security.cert.Certificate, sun.security.provider.PolicyFile.getCertificates/r15, sun.security.provider.PolicyFile.getCertificates/$r14
  <sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile.getSignerCertificates/$r12, sun.security.provider.PolicyFile.getSignerCertificates/$r11
  <sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile.getSignerCertificates/$r17, sun.security.provider.PolicyFile.getSignerCertificates/$r16
  <sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile.getSignerCertificates/$r20, sun.security.provider.PolicyFile.getSignerCertificates/$r19
  <sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile.getSignerCertificates/$r9, sun.security.provider.PolicyFile.getSignerCertificates/$r8
  <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.ProtectionDomain)>, java.security.CodeSource, <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.ProtectionDomain)>/r6, <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.Permissions,java.security.ProtectionDomain)>/$r13
  <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>, java.security.Permission, <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$r11, <sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/$r10
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r11, sun.security.provider.PolicyFile.getInstance/$r10
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r17, sun.security.provider.PolicyFile.getInstance/$r16
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r23, sun.security.provider.PolicyFile.getInstance/$r22
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r28, sun.security.provider.PolicyFile.getInstance/$r27
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r35, sun.security.provider.PolicyFile.getInstance/$r34
  <sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>, java.security.Permission, sun.security.provider.PolicyFile.getInstance/$r40, sun.security.provider.PolicyFile.getInstance/$r39
  <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>, sun.security.provider.PolicyFile$PolicyEntry, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/r6, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$r12
  <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>, sun.security.provider.PolicyFile$PolicyEntry, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/r7, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$r17
  <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>, sun.security.provider.PolicyFile$PolicyInfo, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/r4, <sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>/$r10
  <sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>, sun.security.provider.PolicyFile$SelfPermission, sun.security.provider.PolicyFile$SelfPermission.equals/r2, sun.security.provider.PolicyFile$SelfPermission.equals/r1
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.Certificate[], sun.security.provider.PolicyFile$SelfPermission.<init>/$r10, sun.security.provider.PolicyFile$SelfPermission.<init>/$r9
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.Certificate[], sun.security.provider.PolicyFile$SelfPermission.<init>/$r19, sun.security.provider.PolicyFile$SelfPermission.<init>/$r18
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile$SelfPermission.<init>/$r13, sun.security.provider.PolicyFile$SelfPermission.<init>/$r12
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile$SelfPermission.<init>/$r16, sun.security.provider.PolicyFile$SelfPermission.<init>/$r15
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile$SelfPermission.<init>/$r24, sun.security.provider.PolicyFile$SelfPermission.<init>/$r23
  <sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>, java.security.cert.X509Certificate, sun.security.provider.PolicyFile$SelfPermission.<init>/$r27, sun.security.provider.PolicyFile$SelfPermission.<init>/$r26
  <sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>, sun.security.provider.PolicyParser$PermissionEntry, sun.security.provider.PolicyFile.addGrantEntry/r8, sun.security.provider.PolicyFile.addGrantEntry/$r40
  <sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>, sun.security.provider.PolicyParser$PrincipalEntry, sun.security.provider.PolicyFile.addGrantEntry/r6, sun.security.provider.PolicyFile.addGrantEntry/$r28
  <sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>, com.sun.security.auth.PrincipalComparator, sun.security.provider.PolicyFile.addPermissions/r12, sun.security.provider.PolicyFile.addPermissions/$r57
  <sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>, java.lang.Boolean, sun.security.provider.PolicyFile.addPermissions/r7, sun.security.provider.PolicyFile.addPermissions/$r23
  <sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>, sun.security.provider.PolicyParser$PrincipalEntry, sun.security.provider.PolicyFile.addPermissions/r47, sun.security.provider.PolicyFile.addPermissions/$r46
  <sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>, java.security.Permission, sun.security.provider.PolicyFile.addPerms/r4, sun.security.provider.PolicyFile.addPerms/$r7
  <sun.security.provider.PolicyFile: void addPerms(java.security.Permissions,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>, sun.security.provider.PolicyFile$SelfPermission, sun.security.provider.PolicyFile.addPerms/$r14, sun.security.provider.PolicyFile.addPerms/r4
  <sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>, java.security.Permission, sun.security.provider.PolicyFile.expandSelf/$r103, sun.security.provider.PolicyFile.expandSelf/$r102
  <sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>, java.security.Permission, sun.security.provider.PolicyFile.expandSelf/r10, sun.security.provider.PolicyFile.expandSelf/$r71
  <sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>, java.security.Permission, sun.security.provider.PolicyFile.expandSelf/$r87, sun.security.provider.PolicyFile.expandSelf/$r86
  <sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>, java.security.Permission, sun.security.provider.PolicyFile.expandSelf/$r96, sun.security.provider.PolicyFile.expandSelf/$r95
  <sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>, sun.security.provider.PolicyParser$PrincipalEntry, sun.security.provider.PolicyFile.expandSelf/r8, sun.security.provider.PolicyFile.expandSelf/$r32
  <sun.security.provider.PolicyFile: void init(java.net.URL)>, java.lang.String, <sun.security.provider.PolicyFile: void init(java.net.URL)>/r3, <sun.security.provider.PolicyFile: void init(java.net.URL)>/$r5
  <sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>, sun.security.provider.PolicyParser$GrantEntry, sun.security.provider.PolicyParser.parseGrantEntry/r73, sun.security.provider.PolicyParser.parseGrantEntry/$r72
  <sun.security.util.BitArray: byte[] toByteArray()>, byte[], sun.security.util.BitArray.toByteArray/$r3, sun.security.util.BitArray.toByteArray/$r2
  <sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>, byte[], <sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>/$r4, <sun.security.util.BitArray: void <init>(sun.security.util.BitArray)>/$r3
  <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>, byte[], <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>/$r3, <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>/r1
  <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>, byte[], <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>/$r4, <sun.security.util.ByteArrayLexOrder: int compare(java.lang.Object,java.lang.Object)>/r2
  <sun.security.util.Debug: void <clinit>()>, java.lang.String, sun.security.util.Debug.<clinit>/r1, sun.security.util.Debug.<clinit>/$r5
  <sun.security.util.Debug: void <clinit>()>, java.lang.String, sun.security.util.Debug.<clinit>/$r3, sun.security.util.Debug.<clinit>/$r2
  <sun.security.util.DerIndefLenConverter: void parseTag()>, byte[], sun.security.util.DerIndefLenConverter.parseTag/$r7, sun.security.util.DerIndefLenConverter.parseTag/r1
  <sun.security.util.DerIndefLenConverter: void parseTag()>, byte[], sun.security.util.DerIndefLenConverter.parseTag/$r8, sun.security.util.DerIndefLenConverter.parseTag/$r7
  <sun.security.util.DerIndefLenConverter: void parseTag()>, java.lang.Integer, sun.security.util.DerIndefLenConverter.parseTag/$r10, sun.security.util.DerIndefLenConverter.parseTag/r1
  <sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>, byte[], sun.security.util.DerIndefLenConverter.writeLengthAndValue/r1, sun.security.util.DerIndefLenConverter.writeLengthAndValue/$r7
  <sun.security.util.DerIndefLenConverter: void writeLengthAndValue()>, byte[], sun.security.util.DerIndefLenConverter.writeLengthAndValue/$r7, sun.security.util.DerIndefLenConverter.writeLengthAndValue/$r6
  <sun.security.util.DerInputBuffer: sun.security.util.DerInputBuffer dup()>, sun.security.util.DerInputBuffer, sun.security.util.DerInputBuffer.dup/r1, sun.security.util.DerInputBuffer.dup/$r2
  <sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>, sun.security.util.DerValue, sun.security.util.DerInputStream.readVector/$r26, sun.security.util.DerInputStream.readVector/$r25
  <sun.security.util.DerValue: void <init>(byte,byte[])>, byte[], <sun.security.util.DerValue: void <init>(byte,byte[])>/$r4, <sun.security.util.DerValue: void <init>(byte,byte[])>/$r3
  <sun.security.util.ManifestDigester: sun.security.util.ManifestDigester$Entry get(java.lang.String,boolean)>, sun.security.util.ManifestDigester$Entry, sun.security.util.ManifestDigester.get/r2, sun.security.util.ManifestDigester.get/$r4
  <sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>, byte[], sun.security.util.ManifestEntryVerifier.verify/r4, sun.security.util.ManifestEntryVerifier.verify/$r12
  <sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>, java.security.CodeSigner[], sun.security.util.ManifestEntryVerifier.verify/$r46, sun.security.util.ManifestEntryVerifier.verify/$r45
  <sun.security.util.ManifestEntryVerifier: java.security.CodeSigner[] verify(java.util.Hashtable,java.util.Hashtable)>, java.security.MessageDigest, sun.security.util.ManifestEntryVerifier.verify/r3, sun.security.util.ManifestEntryVerifier.verify/$r10
  <sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>, java.lang.String, sun.security.util.ManifestEntryVerifier.setEntry/$r39, sun.security.util.ManifestEntryVerifier.setEntry/$r38
  <sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>, java.security.MessageDigest, sun.security.util.ManifestEntryVerifier.setEntry/r8, sun.security.util.ManifestEntryVerifier.setEntry/$r30
  <sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>, java.util.Map$Entry, sun.security.util.ManifestEntryVerifier.setEntry/r5, sun.security.util.ManifestEntryVerifier.setEntry/$r25
  <sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>, java.security.MessageDigest, <sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>/$r5, <sun.security.util.ManifestEntryVerifier: void update(byte[],int,int)>/$r4
  <sun.security.util.ManifestEntryVerifier: void update(byte)>, java.security.MessageDigest, <sun.security.util.ManifestEntryVerifier: void update(byte)>/$r4, <sun.security.util.ManifestEntryVerifier: void update(byte)>/$r3
  <sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>, sun.security.util.ObjectIdentifier, <sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>/r2, <sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>/r1
  <sun.security.util.Password: char[] readPassword(java.io.InputStream)>, java.io.PushbackInputStream, sun.security.util.Password.readPassword/$r13, sun.security.util.Password.readPassword/r0
  <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>, java.util.ResourceBundle, <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>/$r4, <sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>/$r3
  <sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.lang.String, sun.security.util.SignatureFileVerifier.verifyManifestHash/$r18, sun.security.util.SignatureFileVerifier.verifyManifestHash/$r17
  <sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.util.Map$Entry, sun.security.util.SignatureFileVerifier.verifyManifestHash/r6, sun.security.util.SignatureFileVerifier.verifyManifestHash/$r14
  <sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.lang.String, sun.security.util.SignatureFileVerifier.verifyManifestMainAttrs/$r21, sun.security.util.SignatureFileVerifier.verifyManifestMainAttrs/$r20
  <sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.util.Map$Entry, sun.security.util.SignatureFileVerifier.verifyManifestMainAttrs/r6, sun.security.util.SignatureFileVerifier.verifyManifestMainAttrs/$r16
  <sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.lang.String, sun.security.util.SignatureFileVerifier.verifySection/$r25, sun.security.util.SignatureFileVerifier.verifySection/$r24
  <sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester,sun.misc.BASE64Decoder)>, java.util.Map$Entry, sun.security.util.SignatureFileVerifier.verifySection/r7, sun.security.util.SignatureFileVerifier.verifySection/$r20
  <sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>, java.security.CodeSigner[], sun.security.util.SignatureFileVerifier.getSigners/$r20, sun.security.util.SignatureFileVerifier.getSigners/$r19
  <sun.security.util.SignatureFileVerifier: java.security.MessageDigest getDigest(java.lang.String)>, java.security.MessageDigest, sun.security.util.SignatureFileVerifier.getDigest/r3, sun.security.util.SignatureFileVerifier.getDigest/$r7
  <sun.security.util.SignatureFileVerifier: java.security.Timestamp getTimestamp(sun.security.pkcs.SignerInfo)>, byte[], sun.security.util.SignatureFileVerifier.getTimestamp/$r13, sun.security.util.SignatureFileVerifier.getTimestamp/$r12
  <sun.security.util.SignatureFileVerifier: java.security.Timestamp getTimestamp(sun.security.pkcs.SignerInfo)>, byte[], sun.security.util.SignatureFileVerifier.getTimestamp/$r14, sun.security.util.SignatureFileVerifier.getTimestamp/$r13
  <sun.security.util.SignatureFileVerifier: void processImpl(java.util.Hashtable)>, java.lang.String, sun.security.util.SignatureFileVerifier.processImpl/r10, sun.security.util.SignatureFileVerifier.processImpl/$r31
  <sun.security.util.SignatureFileVerifier: void processImpl(java.util.Hashtable)>, java.util.jar.Attributes, sun.security.util.SignatureFileVerifier.processImpl/$r33, sun.security.util.SignatureFileVerifier.processImpl/$r32
  <sun.security.util.SignatureFileVerifier: void processImpl(java.util.Hashtable)>, java.util.Map$Entry, sun.security.util.SignatureFileVerifier.processImpl/r9, sun.security.util.SignatureFileVerifier.processImpl/$r30
  <sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>, java.security.CodeSigner[], sun.security.util.SignatureFileVerifier.updateSigners/r4, sun.security.util.SignatureFileVerifier.updateSigners/$r6
  <sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>, java.security.CodeSigner[], sun.security.util.SignatureFileVerifier.updateSigners/r5, sun.security.util.SignatureFileVerifier.updateSigners/$r9
  <sun.security.x509.AlgorithmId: java.lang.String getName()>, java.lang.String, sun.security.x509.AlgorithmId.getName/r2, sun.security.x509.AlgorithmId.getName/$r6
  <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>, sun.security.x509.AVA, <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>/$r3, <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>/r1
  <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>, sun.security.x509.AVA, <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>/$r4, <sun.security.x509.AVAComparator: int compare(java.lang.Object,java.lang.Object)>/r2
  <sun.security.x509.AVA: java.lang.String getEmbeddedHexString(java.util.List)>, java.lang.Byte, sun.security.x509.AVA.getEmbeddedHexString/$r3, sun.security.x509.AVA.getEmbeddedHexString/$r2
  <sun.security.x509.AVAKeyword: boolean hasKeyword(sun.security.util.ObjectIdentifier,int)>, sun.security.x509.AVAKeyword, sun.security.x509.AVAKeyword.hasKeyword/r2, sun.security.x509.AVAKeyword.hasKeyword/$r3
  <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>, java.lang.String, <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>/r3, <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>/$r5
  <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>, sun.security.x509.AVAKeyword, <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>/r4, <sun.security.x509.AVAKeyword: java.lang.String getKeyword(sun.security.util.ObjectIdentifier,int,java.util.Map)>/$r7
  <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>, java.lang.String, <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>/r3, <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>/$r11
  <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>, sun.security.x509.AVAKeyword, <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>/r4, <sun.security.x509.AVAKeyword: sun.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map)>/$r13
  <sun.security.x509.AVA: void <clinit>()>, java.lang.Boolean, sun.security.x509.AVA.<clinit>/$r3, sun.security.x509.AVA.<clinit>/$r2
  <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>, sun.security.x509.CertAttrSet, <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$r10, <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$r9
  <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>, sun.security.x509.Extension, <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$r13, <sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/$r12
  <sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>, java.io.IOException, sun.security.x509.CertificateExtensions.parseExtension/$r43, sun.security.x509.CertificateExtensions.parseExtension/r24
  <sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>, java.io.IOException, sun.security.x509.CertificateExtensions.parseExtension/$r47, sun.security.x509.CertificateExtensions.parseExtension/$r46
  <sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>, java.io.IOException, sun.security.x509.CertificateExtensions.parseExtension/$r55, sun.security.x509.CertificateExtensions.parseExtension/$r54
  <sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>, sun.security.x509.CertAttrSet, sun.security.x509.CertificateExtensions.parseExtension/r5, sun.security.x509.CertificateExtensions.parseExtension/$r16
  <sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>, sun.security.x509.Extension, sun.security.x509.CertificateExtensions.parseExtension/$r19, sun.security.x509.CertificateExtensions.parseExtension/r5
  <sun.security.x509.CRLExtensions: sun.security.x509.Extension get(java.lang.String)>, sun.security.x509.Extension, sun.security.x509.CRLExtensions.get/$r8, sun.security.x509.CRLExtensions.get/$r7
  <sun.security.x509.CRLExtensions: void parseExtension(sun.security.x509.Extension)>, sun.security.x509.CertAttrSet, sun.security.x509.CRLExtensions.parseExtension/r5, sun.security.x509.CRLExtensions.parseExtension/$r16
  <sun.security.x509.CRLExtensions: void parseExtension(sun.security.x509.Extension)>, sun.security.x509.Extension, sun.security.x509.CRLExtensions.parseExtension/$r19, sun.security.x509.CRLExtensions.parseExtension/r5
  <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>, sun.security.x509.OIDMap$OIDInfo, <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>/r2, <sun.security.x509.OIDMap: java.lang.Class getClass(sun.security.util.ObjectIdentifier)>/$r3
  <sun.security.x509.OIDMap: java.lang.String getName(sun.security.util.ObjectIdentifier)>, sun.security.x509.OIDMap$OIDInfo, sun.security.x509.OIDMap.getName/r2, sun.security.x509.OIDMap.getName/$r3
  <sun.security.x509.OIDMap$OIDInfo: java.lang.Class getClazz()>, java.security.cert.CertificateException, sun.security.x509.OIDMap$OIDInfo.getClazz/$r12, sun.security.x509.OIDMap$OIDInfo.getClazz/$r11
  <sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>, java.io.IOException, sun.security.x509.OtherName.getGNI/$r20, sun.security.x509.OtherName.getGNI/$r19
  <sun.security.x509.OtherName: sun.security.x509.GeneralNameInterface getGNI(sun.security.util.ObjectIdentifier,byte[])>, sun.security.x509.GeneralNameInterface, sun.security.x509.OtherName.getGNI/r7, sun.security.x509.OtherName.getGNI/$r10
  <sun.security.x509.RDN: java.lang.String toRFC2253StringInternal(boolean,java.util.Map)>, sun.security.x509.AVA, sun.security.x509.RDN.toRFC2253StringInternal/$r25, sun.security.x509.RDN.toRFC2253StringInternal/$r24
  <sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>, sun.security.x509.AVA[], <sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/$r27, <sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/$r26
  <sun.security.x509.UnparseableExtension: void <init>(sun.security.x509.Extension,java.lang.Throwable)>, java.lang.String, sun.security.x509.UnparseableExtension.<init>/$r8, sun.security.x509.UnparseableExtension.<init>/$r7
  <sun.security.x509.UnparseableExtension: void <init>(sun.security.x509.Extension,java.lang.Throwable)>, java.lang.String, sun.security.x509.UnparseableExtension.<init>/$r9, sun.security.x509.UnparseableExtension.<init>/$r8
  <sun.security.x509.URIName: sun.security.x509.URIName nameConstraint(sun.security.util.DerValue)>, java.io.IOException, sun.security.x509.URIName.nameConstraint/$r13, sun.security.x509.URIName.nameConstraint/$r12
  <sun.security.x509.URIName: sun.security.x509.URIName nameConstraint(sun.security.util.DerValue)>, java.io.IOException, sun.security.x509.URIName.nameConstraint/$r28, sun.security.x509.URIName.nameConstraint/$r27
  <sun.security.x509.URIName: void <init>(java.lang.String)>, java.io.IOException, <sun.security.x509.URIName: void <init>(java.lang.String)>/$r12, <sun.security.x509.URIName: void <init>(java.lang.String)>/$r11
  <sun.security.x509.X500Name: boolean equals(java.lang.Object)>, sun.security.x509.X500Name, sun.security.x509.X500Name.equals/r2, sun.security.x509.X500Name.equals/r1
  <sun.security.x509.X500Name: javax.security.auth.x500.X500Principal asX500Principal()>, javax.security.auth.x500.X500Principal, sun.security.x509.X500Name.asX500Principal/$r6, sun.security.x509.X500Name.asX500Principal/$r5
  <sun.security.x509.X500Name: sun.security.util.ObjectIdentifier intern(sun.security.util.ObjectIdentifier)>, sun.security.util.ObjectIdentifier, sun.security.x509.X500Name.intern/r2, sun.security.x509.X500Name.intern/$r3
  <sun.security.x509.X500Name: void <clinit>()>, java.lang.InternalError, sun.security.x509.X500Name.<clinit>/$r81, sun.security.x509.X500Name.<clinit>/$r80
  <sun.security.x509.X500Name: void <clinit>()>, java.lang.Object[], sun.security.x509.X500Name.<clinit>/r2, sun.security.x509.X500Name.<clinit>/$r72
  <sun.security.x509.X500Name: void <clinit>()>, java.lang.reflect.Constructor, sun.security.x509.X500Name.<clinit>/$r74, sun.security.x509.X500Name.<clinit>/$r73
  <sun.security.x509.X500Name: void <clinit>()>, java.lang.reflect.Field, sun.security.x509.X500Name.<clinit>/$r76, sun.security.x509.X500Name.<clinit>/$r75
  <sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>, sun.security.x509.RDN[], sun.security.x509.X500Name.parseDN/$r15, sun.security.x509.X500Name.parseDN/$r14
  <sun.security.x509.X509CertImpl: boolean[] getKeyUsage()>, sun.security.x509.KeyUsageExtension, sun.security.x509.X509CertImpl.getKeyUsage/r3, sun.security.x509.X509CertImpl.getKeyUsage/$r6
  <sun.security.x509.X509CertImpl: boolean hasUnsupportedCriticalExtension()>, sun.security.x509.CertificateExtensions, sun.security.x509.X509CertImpl.hasUnsupportedCriticalExtension/r1, sun.security.x509.X509CertImpl.hasUnsupportedCriticalExtension/$r4
  <sun.security.x509.X509CertImpl: java.security.Principal getIssuerDN()>, java.security.Principal, sun.security.x509.X509CertImpl.getIssuerDN/r1, sun.security.x509.X509CertImpl.getIssuerDN/$r4
  <sun.security.x509.X509CertImpl: java.security.Principal getSubjectDN()>, java.security.Principal, sun.security.x509.X509CertImpl.getSubjectDN/r1, sun.security.x509.X509CertImpl.getSubjectDN/$r4
  <sun.security.x509.X509CertImpl: java.security.PublicKey getPublicKey()>, java.security.PublicKey, sun.security.x509.X509CertImpl.getPublicKey/r1, sun.security.x509.X509CertImpl.getPublicKey/$r4
  <sun.security.x509.X509CertImpl: sun.security.x509.SerialNumber getSerialNumberObject()>, sun.security.x509.SerialNumber, sun.security.x509.X509CertImpl.getSerialNumberObject/r1, sun.security.x509.X509CertImpl.getSerialNumberObject/$r4
  <sun.security.x509.X509CertImpl: void parse(sun.security.util.DerValue)>, sun.security.x509.AlgorithmId, sun.security.x509.X509CertImpl.parse/r3, sun.security.x509.X509CertImpl.parse/$r36
  <sun.security.x509.X509CertInfo: byte[] getEncodedInfo()>, byte[], sun.security.x509.X509CertInfo.getEncodedInfo/$r7, sun.security.x509.X509CertInfo.getEncodedInfo/$r6
  <sun.security.x509.X509CertInfo: int attributeMap(java.lang.String)>, java.lang.Integer, sun.security.x509.X509CertInfo.attributeMap/r3, sun.security.x509.X509CertInfo.attributeMap/$r4
  <sun.security.x509.X509CertInfo: java.lang.String toString()>, sun.security.x509.Extension, sun.security.x509.X509CertInfo.toString/r134, sun.security.x509.X509CertInfo.toString/$r133
  <sun.security.x509.X509CertInfo: java.lang.String toString()>, sun.security.x509.Extension, sun.security.x509.X509CertInfo.toString/r4, sun.security.x509.X509CertInfo.toString/$r104
  <sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>, sun.security.x509.X500Name, sun.security.x509.X509CertInfo.parse/r4, sun.security.x509.X509CertInfo.parse/$r13
  <sun.security.x509.X509CertInfo: void parse(sun.security.util.DerValue)>, sun.security.x509.X500Name, sun.security.x509.X509CertInfo.parse/r5, sun.security.x509.X509CertInfo.parse/$r18
  <sun.security.x509.X509CertInfo: void verifyCert(sun.security.x509.CertificateSubjectName,sun.security.x509.CertificateExtensions)>, sun.security.x509.GeneralNames, sun.security.x509.X509CertInfo.verifyCert/r10, sun.security.x509.X509CertInfo.verifyCert/$r9
  <sun.security.x509.X509CertInfo: void verifyCert(sun.security.x509.CertificateSubjectName,sun.security.x509.CertificateExtensions)>, sun.security.x509.SubjectAlternativeNameExtension, sun.security.x509.X509CertInfo.verifyCert/r8, sun.security.x509.X509CertInfo.verifyCert/$r7
  <sun.security.x509.X509CertInfo: void verifyCert(sun.security.x509.CertificateSubjectName,sun.security.x509.CertificateExtensions)>, sun.security.x509.X500Name, sun.security.x509.X509CertInfo.verifyCert/r3, sun.security.x509.X509CertInfo.verifyCert/$r5
  <sun.security.x509.X509CRLEntryImpl: sun.security.x509.CertificateIssuerExtension getCertificateIssuerExtension()>, sun.security.x509.CertificateIssuerExtension, sun.security.x509.X509CRLEntryImpl.getCertificateIssuerExtension/$r3, sun.security.x509.X509CRLEntryImpl.getCertificateIssuerExtension/$r2
  <sun.security.x509.X509CRLImpl: javax.security.auth.x500.X500Principal getCertIssuer(sun.security.x509.X509CRLEntryImpl,javax.security.auth.x500.X500Principal)>, sun.security.x509.GeneralNames, sun.security.x509.X509CRLImpl.getCertIssuer/r4, sun.security.x509.X509CRLImpl.getCertIssuer/$r6
  <sun.security.x509.X509CRLImpl: javax.security.auth.x500.X500Principal getCertIssuer(sun.security.x509.X509CRLEntryImpl,javax.security.auth.x500.X500Principal)>, sun.security.x509.X500Name, sun.security.x509.X509CRLImpl.getCertIssuer/r5, sun.security.x509.X509CRLImpl.getCertIssuer/$r8
  <sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>, sun.security.x509.X509CRLImpl$X509IssuerSerial, <sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>/$r2, <sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>/r1
  <sun.security.x509.X509Key: byte[] encode()>, byte[], <sun.security.x509.X509Key: byte[] encode()>/$r3, <sun.security.x509.X509Key: byte[] encode()>/$r2
  <sun.security.x509.X509Key: byte[] getEncoded()>, byte[], sun.security.x509.X509Key.getEncoded/$r4, sun.security.x509.X509Key.getEncoded/$r3
  <sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>, sun.security.x509.X509Key, sun.security.x509.X509Key.buildX509Key/r31, sun.security.x509.X509Key.buildX509Key/r30
  <sun.security.x509.X509Key: sun.security.util.BitArray getKey()>, sun.security.util.BitArray, sun.security.x509.X509Key.getKey/$r6, sun.security.x509.X509Key.getKey/$r5
  <sun.security.x509.X509Key: void setKey(sun.security.util.BitArray)>, sun.security.util.BitArray, sun.security.x509.X509Key.setKey/$r3, sun.security.x509.X509Key.setKey/$r2
  <sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>, java.io.InputStream, <sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>/r5, <sun.text.normalizer.ICUData: java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean)>/$r4
  <sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)>, int[], sun.text.normalizer.RuleCharacterIterator.getPos/$r11, sun.text.normalizer.RuleCharacterIterator.getPos/$r10
  <sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)>, int[], sun.text.normalizer.RuleCharacterIterator.getPos/r3, sun.text.normalizer.RuleCharacterIterator.getPos/$r11
  <sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)>, java.lang.Object[], sun.text.normalizer.RuleCharacterIterator.getPos/r2, sun.text.normalizer.RuleCharacterIterator.getPos/$r8
  <sun.text.normalizer.RuleCharacterIterator: java.lang.Object getPos(java.lang.Object)>, java.lang.Object[], sun.text.normalizer.RuleCharacterIterator.getPos/$r8, sun.text.normalizer.RuleCharacterIterator.getPos/r1
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, char[], sun.text.normalizer.RuleCharacterIterator.setPos/$r6, sun.text.normalizer.RuleCharacterIterator.setPos/$r5
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, char[], sun.text.normalizer.RuleCharacterIterator.setPos/$r7, sun.text.normalizer.RuleCharacterIterator.setPos/$r6
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, int[], sun.text.normalizer.RuleCharacterIterator.setPos/r3, sun.text.normalizer.RuleCharacterIterator.setPos/$r9
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, int[], sun.text.normalizer.RuleCharacterIterator.setPos/$r9, sun.text.normalizer.RuleCharacterIterator.setPos/$r8
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, java.lang.Object[], sun.text.normalizer.RuleCharacterIterator.setPos/r2, sun.text.normalizer.RuleCharacterIterator.setPos/$r4
  <sun.text.normalizer.RuleCharacterIterator: void setPos(java.lang.Object)>, java.lang.Object[], sun.text.normalizer.RuleCharacterIterator.setPos/$r4, sun.text.normalizer.RuleCharacterIterator.setPos/r1
  <sun.text.normalizer.UnicodeSetIterator: boolean nextRange()>, java.lang.String, sun.text.normalizer.UnicodeSetIterator.nextRange/$r5, sun.text.normalizer.UnicodeSetIterator.nextRange/$r4
  <sun.text.normalizer.UnicodeSet: java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean)>, java.lang.String, sun.text.normalizer.UnicodeSet._generatePattern/$r11, sun.text.normalizer.UnicodeSet._generatePattern/$r10
  <sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet set(sun.text.normalizer.UnicodeSet)>, int[], sun.text.normalizer.UnicodeSet.set/$r4, sun.text.normalizer.UnicodeSet.set/$r3
  <sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet set(sun.text.normalizer.UnicodeSet)>, int[], sun.text.normalizer.UnicodeSet.set/$r5, sun.text.normalizer.UnicodeSet.set/$r4
  <sun.text.normalizer.UnicodeSet: sun.text.normalizer.UnicodeSet set(sun.text.normalizer.UnicodeSet)>, java.util.TreeSet, sun.text.normalizer.UnicodeSet.set/$r9, sun.text.normalizer.UnicodeSet.set/$r8
  <sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>, sun.text.normalizer.UnicodeSet, <sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/r8, <sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>/r9
  <sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>, sun.text.normalizer.VersionInfo, <sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/$r8, <sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/r1
  <sun.util.calendar.AbstractCalendar: long getTime(sun.util.calendar.CalendarDate)>, sun.util.calendar.ZoneInfo, sun.util.calendar.AbstractCalendar.getTime/$r4, sun.util.calendar.AbstractCalendar.getTime/r2
  <sun.util.calendar.AbstractCalendar: long getTime(sun.util.calendar.CalendarDate)>, sun.util.calendar.ZoneInfo, sun.util.calendar.AbstractCalendar.getTime/$r5, sun.util.calendar.AbstractCalendar.getTime/r2
  <sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>, sun.util.calendar.ZoneInfo, <sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>/$r4, <sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>/r2
  <sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)>, sun.util.calendar.CalendarDate, sun.util.calendar.AbstractCalendar.getNthDayOfWeek/r2, sun.util.calendar.AbstractCalendar.getNthDayOfWeek/$r3
  <sun.util.calendar.BaseCalendar: boolean isLeapYear(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, <sun.util.calendar.BaseCalendar: boolean isLeapYear(sun.util.calendar.CalendarDate)>/$r2, <sun.util.calendar.BaseCalendar: boolean isLeapYear(sun.util.calendar.CalendarDate)>/r1
  <sun.util.calendar.BaseCalendar: boolean normalize(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, sun.util.calendar.BaseCalendar.normalize/r2, sun.util.calendar.BaseCalendar.normalize/r1
  <sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, <sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>/r2, <sun.util.calendar.BaseCalendar: int getMonthLength(sun.util.calendar.CalendarDate)>/r1
  <sun.util.calendar.BaseCalendar: int getYearLength(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, sun.util.calendar.BaseCalendar.getYearLength/$r2, sun.util.calendar.BaseCalendar.getYearLength/r1
  <sun.util.calendar.BaseCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, <sun.util.calendar.BaseCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>/$r2, <sun.util.calendar.BaseCalendar: long getDayOfYear(sun.util.calendar.CalendarDate)>/r1
  <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>/$r2, <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>/r1
  <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>/$r3, <sun.util.calendar.BaseCalendar: long getFixedDate(sun.util.calendar.CalendarDate)>/r1
  <sun.util.calendar.BaseCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>, sun.util.calendar.BaseCalendar$Date, sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate/r2, sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate/r1
  <sun.util.calendar.BaseCalendar: void normalizeMonth(sun.util.calendar.CalendarDate)>, sun.util.calendar.BaseCalendar$Date, sun.util.calendar.BaseCalendar.normalizeMonth/r2, sun.util.calendar.BaseCalendar.normalizeMonth/r1
  <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>, java.lang.String, sun.util.calendar.CalendarSystem.forName/r3, sun.util.calendar.CalendarSystem.forName/$r9
  <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>, sun.util.calendar.CalendarSystem, sun.util.calendar.CalendarSystem.forName/r10, sun.util.calendar.CalendarSystem.forName/$r11
  <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>, sun.util.calendar.CalendarSystem, sun.util.calendar.CalendarSystem.forName/r17, sun.util.calendar.CalendarSystem.forName/$r16
  <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>, sun.util.calendar.CalendarSystem, sun.util.calendar.CalendarSystem.forName/r2, sun.util.calendar.CalendarSystem.forName/$r7
  <sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>, sun.util.calendar.Gregorian$Date, <sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>/$r3, <sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>/$r2
  <sun.util.calendar.LocalGregorianCalendar: boolean normalize(sun.util.calendar.CalendarDate)>, sun.util.calendar.LocalGregorianCalendar$Date, sun.util.calendar.LocalGregorianCalendar.normalize/r2, sun.util.calendar.LocalGregorianCalendar.normalize/r1
  <sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>, sun.util.calendar.LocalGregorianCalendar$Date, <sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>/r2, <sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>/$r3
  <sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>, java.lang.String, sun.util.calendar.LocalGregorianCalendar.getLocalGregorianCalendar/r1, sun.util.calendar.LocalGregorianCalendar.getLocalGregorianCalendar/$r12
  <sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>, java.util.Properties, sun.util.calendar.LocalGregorianCalendar.getLocalGregorianCalendar/r23, sun.util.calendar.LocalGregorianCalendar.getLocalGregorianCalendar/$r22
  <sun.util.calendar.LocalGregorianCalendar: void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate,long)>, sun.util.calendar.LocalGregorianCalendar$Date, sun.util.calendar.LocalGregorianCalendar.getCalendarDateFromFixedDate/r2, sun.util.calendar.LocalGregorianCalendar.getCalendarDateFromFixedDate/r1
  <sun.util.calendar.LocalGregorianCalendar: void normalizeYear(sun.util.calendar.CalendarDate)>, sun.util.calendar.LocalGregorianCalendar$Date, sun.util.calendar.LocalGregorianCalendar.normalizeYear/r2, sun.util.calendar.LocalGregorianCalendar.normalizeYear/r1
  <sun.util.calendar.ZoneInfoFile: byte[] getZoneInfoMappings()>, byte[], sun.util.calendar.ZoneInfoFile.getZoneInfoMappings/r1, sun.util.calendar.ZoneInfoFile.getZoneInfoMappings/$r3
  <sun.util.calendar.ZoneInfoFile: byte[] readZoneInfoFile(java.lang.String)>, byte[], sun.util.calendar.ZoneInfoFile.readZoneInfoFile/r1, sun.util.calendar.ZoneInfoFile.readZoneInfoFile/$r5
  <sun.util.calendar.ZoneInfoFile: java.lang.String getZoneInfoDir(java.lang.String)>, java.lang.String, sun.util.calendar.ZoneInfoFile.getZoneInfoDir/$r4, sun.util.calendar.ZoneInfoFile.getZoneInfoDir/$r3
  <sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo addToCache(java.lang.String,sun.util.calendar.ZoneInfo)>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfoFile.addToCache/r3, sun.util.calendar.ZoneInfoFile.addToCache/$r6
  <sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getCustomTimeZone(java.lang.String,int)>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfoFile.getCustomTimeZone/$r6, sun.util.calendar.ZoneInfoFile.getCustomTimeZone/$r5
  <sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getFromCache(java.lang.String)>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfoFile.getFromCache/$r4, sun.util.calendar.ZoneInfoFile.getFromCache/$r3
  <sun.util.calendar.ZoneInfoFile: sun.util.calendar.ZoneInfo getZoneInfo(java.lang.String)>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfoFile.getZoneInfo/$r4, sun.util.calendar.ZoneInfoFile.getZoneInfo/$r3
  <sun.util.calendar.ZoneInfoFile: void <clinit>()>, java.lang.String, sun.util.calendar.ZoneInfoFile.<clinit>/r0, sun.util.calendar.ZoneInfoFile.<clinit>/$r8
  <sun.util.calendar.ZoneInfo: java.lang.Object clone()>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfo.clone/r1, sun.util.calendar.ZoneInfo.clone/$r2
  <sun.util.calendar.ZoneInfo: java.util.Map getAliasTable()>, java.util.Map, sun.util.calendar.ZoneInfo.getAliasTable/r2, sun.util.calendar.ZoneInfo.getAliasTable/$r1
  <sun.util.calendar.ZoneInfo: java.util.TimeZone getTimeZone(java.lang.String)>, java.lang.String, sun.util.calendar.ZoneInfo.getTimeZone/r2, sun.util.calendar.ZoneInfo.getTimeZone/$r6
  <sun.util.calendar.ZoneInfo: java.util.TimeZone getTimeZone(java.lang.String)>, java.lang.String, sun.util.calendar.ZoneInfo.getTimeZone/$r9, sun.util.calendar.ZoneInfo.getTimeZone/$r8
  <sun.util.calendar.ZoneInfo: java.util.TimeZone getTimeZone(java.lang.String)>, sun.util.calendar.ZoneInfo, sun.util.calendar.ZoneInfo.getTimeZone/r7, sun.util.calendar.ZoneInfo.getTimeZone/$r10
  <sun.util.calendar.ZoneInfo: void <clinit>()>, java.lang.String, sun.util.calendar.ZoneInfo.<clinit>/$r3, sun.util.calendar.ZoneInfo.<clinit>/$r2
  <sun.util.LocaleDataMetaInfo: java.lang.String getSupportedLocaleString(java.lang.String)>, java.lang.String, sun.util.LocaleDataMetaInfo.getSupportedLocaleString/$r3, sun.util.LocaleDataMetaInfo.getSupportedLocaleString/$r2
  <sun.util.LocaleServiceProviderPool$1: java.lang.Object run()>, java.util.spi.LocaleServiceProvider, sun.util.LocaleServiceProviderPool$1.run/r2, sun.util.LocaleServiceProviderPool$1.run/$r5
  <sun.util.LocaleServiceProviderPool: java.util.Set getProviderLocales()>, java.util.spi.LocaleServiceProvider, sun.util.LocaleServiceProviderPool.getProviderLocales/r3, sun.util.LocaleServiceProviderPool.getProviderLocales/$r9
  <sun.util.LocaleServiceProviderPool: java.util.spi.LocaleServiceProvider findProvider(java.util.Locale)>, java.util.spi.LocaleServiceProvider, sun.util.LocaleServiceProviderPool.findProvider/r2, sun.util.LocaleServiceProviderPool.findProvider/$r10
  <sun.util.LocaleServiceProviderPool: java.util.spi.LocaleServiceProvider findProvider(java.util.Locale)>, java.util.spi.LocaleServiceProvider, sun.util.LocaleServiceProviderPool.findProvider/r3, sun.util.LocaleServiceProviderPool.findProvider/$r14
  <sun.util.LocaleServiceProviderPool: java.util.spi.LocaleServiceProvider findProvider(java.util.Locale)>, java.util.spi.LocaleServiceProvider, sun.util.LocaleServiceProviderPool.findProvider/r7, sun.util.LocaleServiceProviderPool.findProvider/$r16
  <sun.util.LocaleServiceProviderPool: sun.util.LocaleServiceProviderPool getPool(java.lang.Class)>, sun.util.LocaleServiceProviderPool, sun.util.LocaleServiceProviderPool.getPool/r2, sun.util.LocaleServiceProviderPool.getPool/$r4
  <sun.util.LocaleServiceProviderPool: sun.util.LocaleServiceProviderPool getPool(java.lang.Class)>, sun.util.LocaleServiceProviderPool, sun.util.LocaleServiceProviderPool.getPool/r2, sun.util.LocaleServiceProviderPool.getPool/$r7
  <sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>, java.lang.Object[], sun.util.PreHashedMap.get/$r10, sun.util.PreHashedMap.get/$r9
  <sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>, java.lang.Object[], sun.util.PreHashedMap.get/r2, sun.util.PreHashedMap.get/$r10
  <sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>, java.lang.Object[], sun.util.PreHashedMap.get/r2, sun.util.PreHashedMap.get/$r5
  <sun.util.PreHashedMap: java.lang.Object get(java.lang.Object)>, java.lang.Object[], sun.util.PreHashedMap.get/$r5, sun.util.PreHashedMap.get/$r4
  <sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>, java.lang.String, <sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/$r3, <sun.util.PreHashedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/r1
  <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>, java.lang.Object[], <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r13, <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r12
  <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>, java.lang.Object[], <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/r3, <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r13
  <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>, java.lang.Object[], <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/r3, <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r7
  <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>, java.lang.Object[], <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r7, <sun.util.PreHashedMap: java.lang.Object put(java.lang.String,java.lang.Object)>/$r6
  <sun.util.resources.LocaleData: boolean isNonEuroLangSupported()>, java.lang.Boolean, sun.util.resources.LocaleData.isNonEuroLangSupported/$r17, sun.util.resources.LocaleData.isNonEuroLangSupported/$r16
  <sun.util.resources.LocaleData: boolean isNonEuroLangSupported()>, java.lang.String, sun.util.resources.LocaleData.isNonEuroLangSupported/$r6, sun.util.resources.LocaleData.isNonEuroLangSupported/$r5
  <sun.util.resources.LocaleData: java.util.Locale[] getAvailableLocales()>, java.util.Locale[], sun.util.resources.LocaleData.getAvailableLocales/$r2, sun.util.resources.LocaleData.getAvailableLocales/$r1
  <sun.util.resources.LocaleData: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>, java.util.ResourceBundle, sun.util.resources.LocaleData.getBundle/$r4, sun.util.resources.LocaleData.getBundle/$r3
  <sun.util.resources.LocaleData$LocaleDataResourceBundleControl: java.util.List getCandidateLocales(java.lang.String,java.util.Locale)>, java.util.Locale, sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales/$r8, sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales/$r7
  <sun.util.resources.LocaleData: sun.util.resources.OpenListResourceBundle getCurrencyNames(java.util.Locale)>, sun.util.resources.OpenListResourceBundle, sun.util.resources.LocaleData.getCurrencyNames/$r2, sun.util.resources.LocaleData.getCurrencyNames/$r1
  <sun.util.resources.LocaleData: sun.util.resources.OpenListResourceBundle getTimeZoneNames(java.util.Locale)>, sun.util.resources.OpenListResourceBundle, sun.util.resources.LocaleData.getTimeZoneNames/$r2, sun.util.resources.LocaleData.getTimeZoneNames/$r1
  <sun.util.TimeZoneNameUtility: java.lang.String[][] getZoneStrings(java.util.Locale)>, java.lang.ref.SoftReference, sun.util.TimeZoneNameUtility.getZoneStrings/r2, sun.util.TimeZoneNameUtility.getZoneStrings/$r4
  <sun.util.TimeZoneNameUtility: java.lang.String[][] getZoneStrings(java.util.Locale)>, java.lang.String[][], sun.util.TimeZoneNameUtility.getZoneStrings/$r6, sun.util.TimeZoneNameUtility.getZoneStrings/$r5
  <sun.util.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>, java.lang.String[][], sun.util.TimeZoneNameUtility.loadZoneStrings/$r10, sun.util.TimeZoneNameUtility.loadZoneStrings/$r9
  <sun.util.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>, java.lang.String, sun.util.TimeZoneNameUtility.loadZoneStrings/r5, sun.util.TimeZoneNameUtility.loadZoneStrings/$r6
  <sun.util.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNames(sun.util.resources.OpenListResourceBundle,java.lang.String,java.util.Locale)>, java.lang.String[], <sun.util.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNames(sun.util.resources.OpenListResourceBundle,java.lang.String,java.util.Locale)>/r4, <sun.util.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNames(sun.util.resources.OpenListResourceBundle,java.lang.String,java.util.Locale)>/$r8
  <sun.util.TimeZoneNameUtility: sun.util.resources.OpenListResourceBundle getBundle(java.util.Locale)>, java.lang.ref.SoftReference, sun.util.TimeZoneNameUtility.getBundle/r2, sun.util.TimeZoneNameUtility.getBundle/$r4
  <sun.util.TimeZoneNameUtility: sun.util.resources.OpenListResourceBundle getBundle(java.util.Locale)>, sun.util.resources.OpenListResourceBundle, sun.util.TimeZoneNameUtility.getBundle/$r6, sun.util.TimeZoneNameUtility.getBundle/$r5
  <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>, java.util.spi.TimeZoneNameProvider, <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/$r5, <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.Object getObject(java.lang.Object,java.util.Locale,java.lang.String,java.lang.Object[])>/r1
  <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.util.Map,java.util.Set)>, java.lang.String, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/$r11, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/$r10
  <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.util.Map,java.util.Set)>, java.lang.String, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/r7, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/$r12
  <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.util.Map,java.util.Set)>, java.util.Map$Entry, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/r6, sun.util.TimeZoneNameUtility$TimeZoneNameGetter.examineAliases/$r9
  <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] getObject(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>, java.lang.String, <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] getObject(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r11, <sun.util.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String[] getObject(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.Object[])>/$r10
